{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js!/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/ymyu/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangsir/Desktop/ymyu/src/utils/axios.js","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/utils/axios.js","mtime":1592641032498},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Loading2 from \"element-ui/lib/theme-chalk/loading.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Loading from \"element-ui/lib/loading\";\nimport axios from 'axios';\nimport { confirm } from '@/base/confirm';\nimport store from '@/store';\nvar BASE_URL = 'https://api.mtnhao.com/'; // 不带全局loading的请求实例\n\nexport var requestWithoutLoading = createBaseInstance(); // 带全局loading的请求实例\n// 传入函数是因为需要在处理请求结果handleResponse之前处理loading\n// 所以要在内部插入loading拦截器的处理逻辑\n\nexport var request = createBaseInstance();\nmixinLoading(request.interceptors); // 通用的axios实例\n\nfunction createBaseInstance() {\n  var instance = axios.create({\n    baseURL: BASE_URL\n  });\n  instance.interceptors.response.use(handleResponse, handleError);\n  return instance;\n}\n\nfunction handleError(e) {\n  confirm(e.message, '出错啦~');\n  throw e;\n}\n\nfunction handleResponse(response) {\n  return response.data;\n}\n\nvar loading;\nvar loadingCount = 0;\nvar SET_AXIOS_LOADING = 'global/setAxiosLoading';\n\nfunction mixinLoading(interceptors) {\n  interceptors.request.use(loadingRequestInterceptor);\n  interceptors.response.use(loadingResponseInterceptor, loadingResponseErrorInterceptor);\n\n  function loadingRequestInterceptor(config) {\n    if (!loading) {\n      loading = _Loading.service({\n        target: 'body',\n        background: 'transparent',\n        text: '载入中'\n      });\n      store.commit(SET_AXIOS_LOADING, true);\n    }\n\n    loadingCount++;\n    return config;\n  }\n\n  function handleResponseLoading() {\n    loadingCount--;\n\n    if (loadingCount === 0) {\n      loading.close();\n      loading = null;\n      store.commit(SET_AXIOS_LOADING, false);\n    }\n  }\n\n  function loadingResponseInterceptor(response) {\n    handleResponseLoading();\n    return response;\n  }\n\n  function loadingResponseErrorInterceptor(e) {\n    handleResponseLoading();\n    throw e;\n  }\n}",{"version":3,"sources":["/Users/zhangsir/Desktop/ymyu/src/utils/axios.js"],"names":["axios","confirm","store","BASE_URL","requestWithoutLoading","createBaseInstance","request","mixinLoading","interceptors","instance","create","baseURL","response","use","handleResponse","handleError","e","message","data","loading","loadingCount","SET_AXIOS_LOADING","loadingRequestInterceptor","loadingResponseInterceptor","loadingResponseErrorInterceptor","config","service","target","background","text","commit","handleResponseLoading","close"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,QAAQ,GAAG,yBAAjB,C,CACA;;AACA,OAAO,IAAMC,qBAAqB,GAAGC,kBAAkB,EAAhD,C,CACP;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAGD,kBAAkB,EAAlC;AACPE,YAAY,CAACD,OAAO,CAACE,YAAT,CAAZ,C,CACA;;AACA,SAASH,kBAAT,GAA8B;AAC5B,MAAMI,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAa;AAC5BC,IAAAA,OAAO,EAAER;AADmB,GAAb,CAAjB;AAIAM,EAAAA,QAAQ,CAACD,YAAT,CAAsBI,QAAtB,CAA+BC,GAA/B,CAAmCC,cAAnC,EAAmDC,WAAnD;AACA,SAAON,QAAP;AACD;;AAED,SAASM,WAAT,CAAqBC,CAArB,EAAwB;AACtBf,EAAAA,OAAO,CAACe,CAAC,CAACC,OAAH,EAAY,MAAZ,CAAP;AACA,QAAMD,CAAN;AACD;;AAED,SAASF,cAAT,CAAwBF,QAAxB,EAAkC;AAChC,SAAOA,QAAQ,CAACM,IAAhB;AACD;;AAED,IAAIC,OAAJ;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAMC,iBAAiB,GAAG,wBAA1B;;AACA,SAASd,YAAT,CAAsBC,YAAtB,EAAoC;AAClCA,EAAAA,YAAY,CAACF,OAAb,CAAqBO,GAArB,CAAyBS,yBAAzB;AACAd,EAAAA,YAAY,CAACI,QAAb,CAAsBC,GAAtB,CACEU,0BADF,EAEEC,+BAFF;;AAKA,WAASF,yBAAT,CAAmCG,MAAnC,EAA2C;AACzC,QAAI,CAACN,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,SAAQO,OAAR,CAAgB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,UAAU,EAAE,aAFY;AAGxBC,QAAAA,IAAI,EAAE;AAHkB,OAAhB,CAAV;AAKA3B,MAAAA,KAAK,CAAC4B,MAAN,CAAaT,iBAAb,EAAgC,IAAhC;AACD;;AACDD,IAAAA,YAAY;AAEZ,WAAOK,MAAP;AACD;;AAED,WAASM,qBAAT,GAAiC;AAC/BX,IAAAA,YAAY;;AACZ,QAAIA,YAAY,KAAK,CAArB,EAAwB;AACtBD,MAAAA,OAAO,CAACa,KAAR;AACAb,MAAAA,OAAO,GAAG,IAAV;AACAjB,MAAAA,KAAK,CAAC4B,MAAN,CAAaT,iBAAb,EAAgC,KAAhC;AACD;AACF;;AAED,WAASE,0BAAT,CAAoCX,QAApC,EAA8C;AAC5CmB,IAAAA,qBAAqB;AACrB,WAAOnB,QAAP;AACD;;AAED,WAASY,+BAAT,CAAyCR,CAAzC,EAA4C;AAC1Ce,IAAAA,qBAAqB;AACrB,UAAMf,CAAN;AACD;AACF","sourcesContent":["import axios from 'axios'\nimport { Loading } from 'element-ui'\nimport { confirm } from '@/base/confirm'\nimport store from '@/store'\n\nconst BASE_URL = 'https://api.mtnhao.com/'\n// 不带全局loading的请求实例\nexport const requestWithoutLoading = createBaseInstance()\n// 带全局loading的请求实例\n// 传入函数是因为需要在处理请求结果handleResponse之前处理loading\n// 所以要在内部插入loading拦截器的处理逻辑\nexport const request = createBaseInstance()\nmixinLoading(request.interceptors)\n// 通用的axios实例\nfunction createBaseInstance() {\n  const instance = axios.create({\n    baseURL: BASE_URL,\n  })\n\n  instance.interceptors.response.use(handleResponse, handleError)\n  return instance\n}\n\nfunction handleError(e) {\n  confirm(e.message, '出错啦~')\n  throw e\n}\n\nfunction handleResponse(response) {\n  return response.data\n}\n\nlet loading\nlet loadingCount = 0\nconst SET_AXIOS_LOADING = 'global/setAxiosLoading'\nfunction mixinLoading(interceptors) {\n  interceptors.request.use(loadingRequestInterceptor)\n  interceptors.response.use(\n    loadingResponseInterceptor,\n    loadingResponseErrorInterceptor\n  )\n\n  function loadingRequestInterceptor(config) {\n    if (!loading) {\n      loading = Loading.service({\n        target: 'body',\n        background: 'transparent',\n        text: '载入中',\n      })\n      store.commit(SET_AXIOS_LOADING, true)\n    }\n    loadingCount++\n\n    return config\n  }\n\n  function handleResponseLoading() {\n    loadingCount--\n    if (loadingCount === 0) {\n      loading.close()\n      loading = null\n      store.commit(SET_AXIOS_LOADING, false)\n    }\n  }\n\n  function loadingResponseInterceptor(response) {\n    handleResponseLoading()\n    return response\n  }\n\n  function loadingResponseErrorInterceptor(e) {\n    handleResponseLoading()\n    throw e\n  }\n}\n"]}]}