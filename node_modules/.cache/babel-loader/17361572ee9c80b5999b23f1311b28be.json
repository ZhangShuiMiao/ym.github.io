{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js!/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/base/scroller.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/base/scroller.vue","mtime":1592641032487},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BScroll from \"@better-scroll/core\";\nimport ScrollBar from \"@better-scroll/scroll-bar\";\nimport MouseWheel from \"@better-scroll/mouse-wheel\";\nBScroll.use(ScrollBar);\nBScroll.use(MouseWheel);\nvar defaultOptions = {\n  mouseWheel: true,\n  scrollY: true,\n  scrollbar: true,\n  probeType: 3\n};\nexport default {\n  name: \"Scroller\",\n  props: {\n    data: {\n      default: function _default() {\n        return [];\n      }\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {\n    getScroller: function getScroller() {\n      return this.scroller;\n    },\n    refresh: function refresh() {\n      this.scroller.refresh();\n    }\n  },\n  watch: {\n    data: {\n      handler: function handler() {\n        var _this = this;\n\n        this.$nextTick(function () {\n          if (!_this.scroller) {\n            _this.scroller = new BScroll(_this.$refs.scroller, Object.assign({}, defaultOptions, _this.options));\n\n            _this.$emit(\"init\", _this.scroller);\n          } else {\n            _this.scroller && _this.scroller.refresh();\n          }\n        });\n      },\n      immediate: true\n    }\n  }\n};",{"version":3,"sources":["scroller.vue"],"names":[],"mappings":";;;;;;;;;AAUA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,SAAA,MAAA,2BAAA;AACA,OAAA,UAAA,MAAA,4BAAA;AACA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,OAAA,CAAA,GAAA,CAAA,UAAA;AAEA,IAAA,cAAA,GAAA;AACA,EAAA,UAAA,EAAA,IADA;AAEA,EAAA,OAAA,EAAA,IAFA;AAGA,EAAA,SAAA,EAAA,IAHA;AAIA,EAAA,SAAA,EAAA;AAJA,CAAA;AAMA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AADA,KADA;AAIA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAJA,GAFA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA,EAAA;AACA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,KAAA,QAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,WAAA,QAAA,CAAA,OAAA;AACA;AANA,GAdA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OADA,qBACA;AAAA;;AACA,aAAA,SAAA,CAAA,YAAA;AACA,cAAA,CAAA,KAAA,CAAA,QAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,GAAA,IAAA,OAAA,CACA,KAAA,CAAA,KAAA,CAAA,QADA,EAEA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA,EAAA,KAAA,CAAA,OAAA,CAFA,CAAA;;AAIA,YAAA,KAAA,CAAA,KAAA,CAAA,MAAA,EAAA,KAAA,CAAA,QAAA;AACA,WANA,MAMA;AACA,YAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,OAAA,EAAA;AACA;AACA,SAVA;AAWA,OAbA;AAcA,MAAA,SAAA,EAAA;AAdA;AADA;AAtBA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"scroller\"\n    ref=\"scroller\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport BScroll from \"@better-scroll/core\"\nimport ScrollBar from \"@better-scroll/scroll-bar\"\nimport MouseWheel from \"@better-scroll/mouse-wheel\"\nBScroll.use(ScrollBar)\nBScroll.use(MouseWheel)\n\nconst defaultOptions = {\n  mouseWheel: true,\n  scrollY: true,\n  scrollbar: true,\n  probeType: 3\n}\nexport default {\n  name: \"Scroller\",\n  props: {\n    data: {\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {}\n  },\n  methods: {\n    getScroller() {\n      return this.scroller\n    },\n    refresh() {\n      this.scroller.refresh()\n    }\n  },\n  watch: {\n    data: {\n      handler() {\n        this.$nextTick(() => {\n          if (!this.scroller) {\n            this.scroller = new BScroll(\n              this.$refs.scroller,\n              Object.assign({}, defaultOptions, this.options)\n            )\n            this.$emit(\"init\", this.scroller)\n          } else {\n            this.scroller && this.scroller.refresh()\n          }\n        })\n      },\n      immediate: true\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" >\n.scroller {\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n\n  .bscroll-indicator {\n    border: none !important;\n    background: var(--scrollbar-color) !important;\n  }\n}\n</style>\n"],"sourceRoot":"src/base"}]}