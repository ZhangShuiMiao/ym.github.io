{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js!/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/page/playlist-detail/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/page/playlist-detail/index.vue","mtime":1592641032493},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhangsir/Desktop/ymyu/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DetailHeader from \"./header\";\nimport SongTable from \"@/components/song-table\";\nimport Comments from \"@/components/comments\";\nimport { createSong, scrollInto } from \"@/utils\";\nimport { getListDetail } from \"@/api\";\nimport { getSongDetail } from \"@/api\";\nvar MAX = 500;\nvar SONG_IDX = 0;\nvar COMMENT_IDX = 1;\nexport default {\n  metaInfo: function metaInfo() {\n    return {\n      title: this.playlist.name\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.SONG_IDX = SONG_IDX;\n              this.COMMENT_IDX = COMMENT_IDX;\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  data: function data() {\n    return {\n      tabs: [\"歌曲列表\", \"评论\"],\n      activeTab: SONG_IDX,\n      playlist: {},\n      songs: [],\n      searchValue: \"\",\n      inputFocus: false\n    };\n  },\n  methods: {\n    init: function () {\n      var _init = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref, playlist;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getListDetail({\n                  id: this.id\n                });\n\n              case 2:\n                _ref = _context2.sent;\n                playlist = _ref.playlist;\n                this.playlist = playlist;\n                this.genSonglist(playlist);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    genSonglist: function () {\n      var _genSonglist = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(playlist) {\n        var trackIds, songDetails, songs;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                trackIds = playlist.trackIds.map(function (_ref2) {\n                  var id = _ref2.id;\n                  return id;\n                });\n                _context3.next = 3;\n                return getSongDetail(trackIds.slice(0, MAX));\n\n              case 3:\n                songDetails = _context3.sent;\n                songs = songDetails.songs.map(function (_ref3) {\n                  var id = _ref3.id,\n                      name = _ref3.name,\n                      al = _ref3.al,\n                      ar = _ref3.ar,\n                      mv = _ref3.mv,\n                      dt = _ref3.dt;\n                  return createSong({\n                    id: id,\n                    name: name,\n                    artists: ar,\n                    duration: dt,\n                    mvId: mv,\n                    albumName: al.name,\n                    img: al.picUrl\n                  });\n                });\n                this.songs = songs;\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function genSonglist(_x) {\n        return _genSonglist.apply(this, arguments);\n      }\n\n      return genSonglist;\n    }(),\n    onCommentsUpdate: function onCommentsUpdate(_ref4) {\n      var total = _ref4.total;\n      this.tabs.splice(COMMENT_IDX, 1, \"\\u8BC4\\u8BBA(\".concat(total, \")\"));\n    },\n    onInputFocus: function onInputFocus() {\n      this.inputFocus = true;\n    },\n    onInputBlur: function onInputBlur() {\n      this.inputFocus = false;\n    },\n    getInputCls: function getInputCls() {\n      return !this.inputFocus ? \"inactive\" : \"\";\n    },\n    scrollToHeader: function scrollToHeader() {\n      var header = this.$refs.header;\n\n      if (header) {\n        scrollInto(header.$el);\n      }\n    }\n  },\n  computed: {\n    id: function id() {\n      return Number(this.$route.params.id);\n    },\n    filteredSongs: function filteredSongs() {\n      var _this = this;\n\n      return this.songs.filter(function (_ref5) {\n        var name = _ref5.name,\n            artistsText = _ref5.artistsText,\n            albumName = _ref5.albumName;\n        return \"\".concat(name).concat(artistsText).concat(albumName).toLowerCase().includes(_this.searchValue.toLowerCase());\n      });\n    }\n  },\n  watch: {\n    id: {\n      handler: function handler() {\n        this.searchValue = \"\";\n        this.init();\n        this.scrollToHeader();\n      },\n      immediate: true\n    }\n  },\n  components: {\n    DetailHeader: DetailHeader,\n    SongTable: SongTable,\n    Comments: Comments\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["// 歌单详情页面\n<template>\n  <div class=\"playlist-detail\" v-if=\"playlist.id\">\n    <DetailHeader ref=\"header\" :playlist=\"playlist\" :songs=\"songs\" />\n    <div class=\"tabs-wrap\">\n      <Tabs :tabs=\"tabs\" type=\"theme\" v-model=\"activeTab\" />\n      <el-input\n        :class=\"getInputCls()\"\n        @blur=\"onInputBlur\"\n        @focus=\"onInputFocus\"\n        class=\"input\"\n        placeholder=\"搜索歌单音乐\"\n        prefix-icon=\"el-icon-search\"\n        v-model=\"searchValue\"\n        v-show=\"activeTab === SONG_IDX\"\n      ></el-input>\n    </div>\n    <div class=\"empty\" v-if=\"searchValue && !filteredSongs.length\">\n      未能找到和\n      <span class=\"keyword\">“{{ searchValue }}”</span>\n      相关的任何音乐\n    </div>\n    <SongTable\n      :highlightText=\"searchValue\"\n      :songs=\"filteredSongs\"\n      class=\"table\"\n      v-show=\"activeTab === SONG_IDX\"\n    />\n    <div class=\"comments\" v-show=\"activeTab === COMMENT_IDX\">\n      <Comments :id=\"id\" @update=\"onCommentsUpdate\" type=\"playlist\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport DetailHeader from \"./header\"\nimport SongTable from \"@/components/song-table\"\nimport Comments from \"@/components/comments\"\nimport { createSong, scrollInto } from \"@/utils\"\nimport { getListDetail } from \"@/api\"\nimport { getSongDetail } from \"@/api\"\n\nconst MAX = 500\nconst SONG_IDX = 0\nconst COMMENT_IDX = 1\nexport default {\n  metaInfo() {\n    return {\n      title: this.playlist.name,\n    }\n  },\n  async created() {\n    this.SONG_IDX = SONG_IDX\n    this.COMMENT_IDX = COMMENT_IDX\n  },\n  data() {\n    return {\n      tabs: [\"歌曲列表\", \"评论\"],\n      activeTab: SONG_IDX,\n      playlist: {},\n      songs: [],\n      searchValue: \"\",\n      inputFocus: false,\n    }\n  },\n  methods: {\n    async init() {\n      const { playlist } = await getListDetail({ id: this.id })\n      this.playlist = playlist\n      this.genSonglist(playlist)\n    },\n    async genSonglist(playlist) {\n      const trackIds = playlist.trackIds.map(({ id }) => id)\n      const songDetails = await getSongDetail(trackIds.slice(0, MAX))\n      const songs = songDetails.songs.map(({ id, name, al, ar, mv, dt }) =>\n        createSong({\n          id,\n          name,\n          artists: ar,\n          duration: dt,\n          mvId: mv,\n          albumName: al.name,\n          img: al.picUrl,\n        }),\n      )\n      this.songs = songs\n    },\n    onCommentsUpdate({ total }) {\n      this.tabs.splice(COMMENT_IDX, 1, `评论(${total})`)\n    },\n    onInputFocus() {\n      this.inputFocus = true\n    },\n    onInputBlur() {\n      this.inputFocus = false\n    },\n    getInputCls() {\n      return !this.inputFocus ? \"inactive\" : \"\"\n    },\n    scrollToHeader() {\n      const { header } = this.$refs\n      if (header) {\n        scrollInto(header.$el)\n      }\n    },\n  },\n  computed: {\n    id() {\n      return Number(this.$route.params.id)\n    },\n    filteredSongs() {\n      return this.songs.filter(({ name, artistsText, albumName }) =>\n        `${name}${artistsText}${albumName}`\n          .toLowerCase()\n          .includes(this.searchValue.toLowerCase()),\n      )\n    },\n  },\n  watch: {\n    id: {\n      handler() {\n        this.searchValue = \"\"\n        this.init()\n        this.scrollToHeader()\n      },\n      immediate: true,\n    },\n  },\n  components: { DetailHeader, SongTable, Comments },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.playlist-detail {\n  width: 100%;\n\n  .tabs-wrap {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0 24px;\n    border-bottom: 1px solid var(--border);\n\n    .input {\n      width: 125px;\n\n      &:not(:hover) {\n        &.inactive {\n          /deep/.el-input__inner {\n            background: transparent !important;\n          }\n        }\n      }\n    }\n  }\n\n  .empty {\n    @include flex-center;\n    height: 200px;\n\n    .keyword {\n      color: $blue;\n    }\n  }\n\n  .comments {\n    padding: 16px 32px;\n  }\n}\n</style>\n"],"sourceRoot":"src/page/playlist-detail"}]}