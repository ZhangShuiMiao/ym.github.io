{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/components/comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/components/comments.vue","mtime":1592641032488},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getSongComment, getPlaylistComment, getHotComment, getMvComment } from \"@/api\";\nimport { getPageOffset, scrollInto } from \"@/utils\";\nimport Comment from \"./comment\";\nvar SONG_TYPE = \"song\";\nvar PLAYLIST_TYPE = \"playlist\";\nvar MV_TYPE = \"mv\";\nvar PAGE_SIZE = 20;\nexport default {\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    type: {\n      // SONG_TYPE, PLAYLIST_TYPE, MV_TYPE 之一\n      type: String,\n      default: SONG_TYPE\n    }\n  },\n  created: function created() {\n    this.PAGE_SIZE = PAGE_SIZE;\n  },\n  data: function data() {\n    return {\n      loading: false,\n      hotComments: [],\n      comments: [],\n      total: 0,\n      currentPage: 1\n    };\n  },\n  methods: {\n    getComment: function () {\n      var _getComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _commentRequestMap,\n            _this = this;\n\n        var commentRequestMap, commentRequest, _ref, _ref$hotComments, hotComments, _ref$comments, comments, total, _ref2, _ref2$hotComments, exactHotComments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                commentRequestMap = (_commentRequestMap = {}, _defineProperty(_commentRequestMap, PLAYLIST_TYPE, getPlaylistComment), _defineProperty(_commentRequestMap, SONG_TYPE, getSongComment), _defineProperty(_commentRequestMap, MV_TYPE, getMvComment), _commentRequestMap);\n                commentRequest = commentRequestMap[this.type];\n                _context.next = 5;\n                return commentRequest({\n                  id: this.id,\n                  pageSize: PAGE_SIZE,\n                  offset: getPageOffset(this.currentPage, PAGE_SIZE)\n                }).finally(function () {\n                  _this.loading = false;\n                });\n\n              case 5:\n                _ref = _context.sent;\n                _ref$hotComments = _ref.hotComments;\n                hotComments = _ref$hotComments === void 0 ? [] : _ref$hotComments;\n                _ref$comments = _ref.comments;\n                comments = _ref$comments === void 0 ? [] : _ref$comments;\n                total = _ref.total;\n\n                if (!(this.type === PLAYLIST_TYPE && this.currentPage === 1)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                _context.next = 14;\n                return getHotComment({\n                  id: this.id,\n                  type: 2 // 歌单type\n\n                });\n\n              case 14:\n                _ref2 = _context.sent;\n                _ref2$hotComments = _ref2.hotComments;\n                exactHotComments = _ref2$hotComments === void 0 ? [] : _ref2$hotComments;\n                this.hotComments = exactHotComments;\n                _context.next = 21;\n                break;\n\n              case 20:\n                this.hotComments = hotComments;\n\n              case 21:\n                this.comments = comments;\n                this.total = total;\n                this.$emit(\"update\", {\n                  comments: comments,\n                  hotComments: hotComments,\n                  total: total\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getComment() {\n        return _getComment.apply(this, arguments);\n      }\n\n      return getComment;\n    }(),\n    onPageChange: function () {\n      var _onPageChange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getComment();\n\n              case 2:\n                this.$nextTick(function () {\n                  scrollInto(_this2.$refs.commentTitle);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onPageChange() {\n        return _onPageChange.apply(this, arguments);\n      }\n\n      return onPageChange;\n    }()\n  },\n  watch: {\n    id: {\n      handler: function handler(newId) {\n        if (newId) {\n          this.currentPage = 1;\n          this.getComment();\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    shouldHotCommentShow: function shouldHotCommentShow() {\n      return this.hotComments.length > 0 && this.currentPage === 1;\n    },\n    shouldCommentShow: function shouldCommentShow() {\n      return this.comments.length > 0;\n    }\n  },\n  components: {\n    Comment: Comment\n  }\n};",{"version":3,"sources":["comments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"comment\">\n    <template v-if=\"loading\">\n      <Loading :loading=\"loading\" />\n    </template>\n    <template v-else>\n      <div\n        class=\"block\"\n        v-if=\"shouldHotCommentShow\"\n      >\n        <p class=\"title\">精彩评论</p>\n        <Comment\n          :border=\"!$utils.isLast(index, hotComments)\"\n          :comment=\"comment\"\n          :key=\"comment.id\"\n          v-for=\"(comment, index) in hotComments\"\n        />\n      </div>\n      <div\n        class=\"block\"\n        v-if=\"shouldCommentShow\"\n      >\n        <p\n          class=\"title\"\n          ref=\"commentTitle\"\n        >\n          最新评论\n          <span class=\"count\">({{total}})</span>\n        </p>\n        <Comment\n          :border=\"!$utils.isLast(index, comments)\"\n          :comment=\"comment\"\n          :key=\"comment.id\"\n          v-for=\"(comment,index) in comments\"\n        />\n      </div>\n      <Pagination\n        :current-page.sync=\"currentPage\"\n        :page-size=\"PAGE_SIZE\"\n        :total=\"total\"\n        @current-change=\"onPageChange\"\n        class=\"pagination\"\n      />\n    </template>\n    <empty v-if=\"!loading && !shouldHotCommentShow && !shouldCommentShow\">还没有评论哦~</empty>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport {\n  getSongComment,\n  getPlaylistComment,\n  getHotComment,\n  getMvComment\n} from \"@/api\"\nimport { getPageOffset, scrollInto } from \"@/utils\"\nimport Comment from \"./comment\"\n\nconst SONG_TYPE = \"song\"\nconst PLAYLIST_TYPE = \"playlist\"\nconst MV_TYPE = \"mv\"\n\nconst PAGE_SIZE = 20\nexport default {\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    type: {\n      // SONG_TYPE, PLAYLIST_TYPE, MV_TYPE 之一\n      type: String,\n      default: SONG_TYPE\n    }\n  },\n  created() {\n    this.PAGE_SIZE = PAGE_SIZE\n  },\n  data() {\n    return {\n      loading: false,\n      hotComments: [],\n      comments: [],\n      total: 0,\n      currentPage: 1\n    }\n  },\n  methods: {\n    async getComment() {\n      this.loading = true\n      const commentRequestMap = {\n        [PLAYLIST_TYPE]: getPlaylistComment,\n        [SONG_TYPE]: getSongComment,\n        [MV_TYPE]: getMvComment\n      }\n      const commentRequest = commentRequestMap[this.type]\n      const { hotComments = [], comments = [], total } = await commentRequest({\n        id: this.id,\n        pageSize: PAGE_SIZE,\n        offset: getPageOffset(this.currentPage, PAGE_SIZE)\n      }).finally(() => {\n        this.loading = false\n      })\n\n      // 歌单的热评需要单独请求接口获取\n      if (this.type === PLAYLIST_TYPE && this.currentPage === 1) {\n        const { hotComments: exactHotComments = [] } = await getHotComment({\n          id: this.id,\n          type: 2 // 歌单type\n        })\n        this.hotComments = exactHotComments\n      } else {\n        this.hotComments = hotComments\n      }\n\n      this.comments = comments\n      this.total = total\n      this.$emit(\"update\", { comments, hotComments, total })\n    },\n    async onPageChange() {\n      await this.getComment()\n      this.$nextTick(() => {\n        scrollInto(this.$refs.commentTitle)\n      })\n    }\n  },\n  watch: {\n    id: {\n      handler(newId) {\n        if (newId) {\n          this.currentPage = 1\n          this.getComment()\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    shouldHotCommentShow() {\n      return this.hotComments.length > 0 && this.currentPage === 1\n    },\n    shouldCommentShow() {\n      return this.comments.length > 0\n    }\n  },\n  components: {\n    Comment\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.block {\n  margin-bottom: 48px;\n\n  .title {\n    font-size: $font-size-lg;\n    font-weight: $font-weight-bold;\n    margin-bottom: 4px;\n\n    .count {\n      font-size: $font-size;\n    }\n  }\n}\n\n.pagination {\n  text-align: right;\n}\n</style>\n"],"sourceRoot":"src/components"}]}