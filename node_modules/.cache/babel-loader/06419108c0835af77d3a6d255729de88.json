{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/components/song-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/components/song-table.vue","mtime":1592641032490},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _mergeJSXProps2 from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _objectWithoutProperties from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ElTable from \"element-ui/lib/table\";\nimport { mapMutations, mapActions, mapState } from \"@/store/helper/music\";\nimport { pad, goMvWithCheck } from \"@/utils\";\nexport default {\n  props: {\n    hideColumns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    songs: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    highlightText: {\n      type: String,\n      default: \"\"\n    },\n    // 名字下面渲染的额外内容\n    renderNameDesc: {\n      type: Function\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var h = this.$createElement;\n    var commonHighLightSlotScopes = {\n      default: function _default(scope) {\n        var text = scope.row[scope.column.property];\n        return h(\"HighlightText\", {\n          \"class\": \"song-table-name\",\n          \"attrs\": {\n            \"text\": text,\n            \"highlightText\": _this.highlightText\n          }\n        });\n      }\n    };\n    return {\n      columns: [{\n        prop: \"index\",\n        label: \"\",\n        width: \"70\",\n        scopedSlots: {\n          default: function _default(scope) {\n            return h(\"div\", {\n              \"class\": \"index-wrap\"\n            }, [_this.isActiveSong(scope.row) ? h(\"Icon\", {\n              \"class\": \"horn\",\n              \"attrs\": {\n                \"type\": \"horn\",\n                \"color\": \"theme\"\n              }\n            }) : // 补上左边的0\n            h(\"span\", [pad(scope.$index + 1)])]);\n          }\n        }\n      }, {\n        prop: \"img\",\n        label: \" \",\n        width: \"100\",\n        scopedSlots: {\n          default: function _default(scope) {\n            return h(\"div\", {\n              \"class\": \"img-wrap\"\n            }, [h(\"img\", {\n              \"directives\": [{\n                name: \"lazy\",\n                value: _this.$utils.genImgUrl(scope.row.img, 120)\n              }]\n            }), h(\"PlayIcon\", {\n              \"class\": \"play-icon\"\n            })]);\n          }\n        }\n      }, {\n        prop: \"name\",\n        label: \"音乐标题\",\n        className: \"title-td\",\n        scopedSlots: {\n          default: function _default(scope) {\n            var mvId = scope.row.mvId;\n\n            var onGoMv =\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(e) {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        e.stopPropagation();\n                        goMvWithCheck(mvId);\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function onGoMv(_x) {\n                return _ref.apply(this, arguments);\n              };\n            }();\n\n            return h(\"div\", [h(\"div\", {\n              \"class\": \"song-table-name-cell\"\n            }, [commonHighLightSlotScopes.default(scope), mvId ? h(\"Icon\", {\n              \"class\": \"mv-icon\",\n              \"on\": {\n                \"click\": onGoMv\n              },\n              \"attrs\": {\n                \"type\": \"mv\",\n                \"color\": \"theme\",\n                \"size\": 18\n              }\n            }) : null]), _this.renderNameDesc ? _this.renderNameDesc(scope) : null]);\n          }\n        }\n      }, {\n        prop: \"artistsText\",\n        label: \"歌手\",\n        scopedSlots: commonHighLightSlotScopes\n      }, {\n        prop: \"albumName\",\n        label: \"专辑\",\n        scopedSlots: commonHighLightSlotScopes\n      }, {\n        prop: \"durationSecond\",\n        label: \"时长\",\n        width: \"100\",\n        scopedSlots: {\n          default: function _default(scope) {\n            return h(\"span\", [_this.$utils.formatTime(scope.row.durationSecond)]);\n          }\n        }\n      }]\n    };\n  },\n  methods: _objectSpread({\n    onRowClick: function onRowClick(song) {\n      this.startSong(song);\n      this.setPlaylist(this.songs);\n    },\n    isActiveSong: function isActiveSong(song) {\n      return song.id === this.currentSong.id;\n    },\n    tableCellClassName: function tableCellClassName(args) {\n      var row = args.row,\n          columnIndex = args.columnIndex;\n      var cellClassNameProp = this.$attrs.cellClassName;\n      var retCls = []; // 执行外部传入的方法\n\n      if (cellClassNameProp) {\n        var propRet = cellClassNameProp(args);\n\n        if (propRet) {\n          retCls.push(propRet);\n        }\n      }\n\n      if (this.isActiveSong(row) && columnIndex === this.showColumns.findIndex(function (_ref2) {\n        var prop = _ref2.prop;\n        return prop === \"name\";\n      })) {\n        retCls.push(\"song-active\");\n      }\n\n      return retCls.join(\" \");\n    }\n  }, mapMutations([\"setPlaylist\"]), {}, mapActions([\"startSong\"])),\n  computed: _objectSpread({\n    showColumns: function showColumns() {\n      var hideColumns = this.hideColumns.slice();\n      var reference = this.songs[0];\n      var img = reference.img;\n\n      if (!img) {\n        hideColumns.push(\"img\");\n      }\n\n      return this.columns.filter(function (column) {\n        return !hideColumns.find(function (hideColumn) {\n          return hideColumn === column.prop;\n        });\n      });\n    }\n  }, mapState([\"currentSong\"])),\n  render: function render() {\n    var h = arguments[0];\n    var elTableProps = ElTable.props; // 从$attrs里提取作为prop的值\n\n    var _genPropsAndAttrs = genPropsAndAttrs(this.$attrs, elTableProps),\n        props = _genPropsAndAttrs.props,\n        attrs = _genPropsAndAttrs.attrs;\n\n    var tableAttrs = {\n      attrs: attrs,\n      on: _objectSpread({}, this.$listeners, _defineProperty({}, \"row-click\", this.onRowClick)),\n      props: _objectSpread({}, props, {\n        cellClassName: this.tableCellClassName,\n        headerCellClassName: \"title-th\",\n        data: this.songs\n      }),\n      style: {\n        width: \"99.9%\"\n      }\n    };\n    return this.songs.length ? h(\"el-table\", _mergeJSXProps([{\n      \"class\": \"song-table\"\n    }, tableAttrs]), [this.showColumns.map(function (column, index) {\n      var scopedSlots = column.scopedSlots,\n          columnProps = _objectWithoutProperties(column, [\"scopedSlots\"]);\n\n      return h(\"el-table-column\", _mergeJSXProps2([{\n        \"key\": index\n      }, {\n        \"props\": columnProps\n      }, {\n        \"scopedSlots\": scopedSlots\n      }]));\n    })]) : null;\n  }\n};\n\nfunction genPropsAndAttrs(rawAttrs, componentProps) {\n  var props = {};\n  var attrs = {};\n  Object.keys(rawAttrs).forEach(function (key) {\n    var value = rawAttrs[key];\n\n    if (componentProps.hasOwnProperty(key)) {\n      props[key] = value;\n    } else {\n      attrs[key] = value;\n    }\n  });\n  return {\n    props: props,\n    attrs: attrs\n  };\n}",{"version":3,"sources":["song-table.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport ElTable from \"element-ui/lib/table\"\nimport { mapMutations, mapActions, mapState } from \"@/store/helper/music\"\nimport { pad, goMvWithCheck } from \"@/utils\"\n\nexport default {\n  props: {\n    hideColumns: {\n      type: Array,\n      default: () => [],\n    },\n    songs: {\n      type: Array,\n      default: () => [],\n    },\n    highlightText: {\n      type: String,\n      default: \"\",\n    },\n    // 名字下面渲染的额外内容\n    renderNameDesc: {\n      type: Function,\n    },\n  },\n  data() {\n    const commonHighLightSlotScopes = {\n      default: scope => {\n        const text = scope.row[scope.column.property]\n        return (\n          <HighlightText\n            class=\"song-table-name\"\n            text={text}\n            highlightText={this.highlightText}\n          />\n        )\n      },\n    }\n    return {\n      columns: [\n        {\n          prop: \"index\",\n          label: \"\",\n          width: \"70\",\n          scopedSlots: {\n            default: scope => {\n              return (\n                <div class=\"index-wrap\">\n                  {this.isActiveSong(scope.row) ? (\n                    <Icon class=\"horn\" type=\"horn\" color=\"theme\" />\n                  ) : (\n                    // 补上左边的0\n                    <span>{pad(scope.$index + 1)}</span>\n                  )}\n                </div>\n              )\n            },\n          },\n        },\n        {\n          prop: \"img\",\n          label: \" \",\n          width: \"100\",\n          scopedSlots: {\n            default: scope => {\n              return (\n                <div class=\"img-wrap\">\n                  <img v-lazy={this.$utils.genImgUrl(scope.row.img, 120)} />\n                  <PlayIcon class=\"play-icon\" />\n                </div>\n              )\n            },\n          },\n        },\n        {\n          prop: \"name\",\n          label: \"音乐标题\",\n          className: \"title-td\",\n          scopedSlots: {\n            default: scope => {\n              const {\n                row: { mvId },\n              } = scope\n\n              const onGoMv = async e => {\n                e.stopPropagation()\n                goMvWithCheck(mvId)\n              }\n\n              return (\n                <div>\n                  <div class=\"song-table-name-cell\">\n                    {commonHighLightSlotScopes.default(scope)}\n\n                    {mvId ? (\n                      <Icon\n                        class=\"mv-icon\"\n                        onClick={onGoMv}\n                        type=\"mv\"\n                        color=\"theme\"\n                        size={18}\n                      />\n                    ) : null}\n                  </div>\n\n                  {this.renderNameDesc ? this.renderNameDesc(scope) : null}\n                </div>\n              )\n            },\n          },\n        },\n        {\n          prop: \"artistsText\",\n          label: \"歌手\",\n          scopedSlots: commonHighLightSlotScopes,\n        },\n        {\n          prop: \"albumName\",\n          label: \"专辑\",\n          scopedSlots: commonHighLightSlotScopes,\n        },\n        {\n          prop: \"durationSecond\",\n          label: \"时长\",\n          width: \"100\",\n          scopedSlots: {\n            default: scope => {\n              return (\n                <span>{this.$utils.formatTime(scope.row.durationSecond)}</span>\n              )\n            },\n          },\n        },\n      ],\n    }\n  },\n  methods: {\n    onRowClick(song) {\n      this.startSong(song)\n      this.setPlaylist(this.songs)\n    },\n    isActiveSong(song) {\n      return song.id === this.currentSong.id\n    },\n    tableCellClassName(args) {\n      const { row, columnIndex } = args\n      const cellClassNameProp = this.$attrs.cellClassName\n\n      let retCls = []\n      // 执行外部传入的方法\n      if (cellClassNameProp) {\n        const propRet = cellClassNameProp(args)\n        if (propRet) {\n          retCls.push(propRet)\n        }\n      }\n      if (\n        this.isActiveSong(row) &&\n        columnIndex ===\n          this.showColumns.findIndex(({ prop }) => prop === \"name\")\n      ) {\n        retCls.push(\"song-active\")\n      }\n      return retCls.join(\" \")\n    },\n    ...mapMutations([\"setPlaylist\"]),\n    ...mapActions([\"startSong\"]),\n  },\n  computed: {\n    showColumns() {\n      const hideColumns = this.hideColumns.slice()\n      const reference = this.songs[0]\n      const { img } = reference\n      if (!img) {\n        hideColumns.push(\"img\")\n      }\n      return this.columns.filter(column => {\n        return !hideColumns.find(hideColumn => hideColumn === column.prop)\n      })\n    },\n    ...mapState([\"currentSong\"]),\n  },\n  render() {\n    const elTableProps = ElTable.props\n    // 从$attrs里提取作为prop的值\n    const { props, attrs } = genPropsAndAttrs(this.$attrs, elTableProps)\n    const tableAttrs = {\n      attrs,\n      on: {\n        ...this.$listeners,\n        [\"row-click\"]: this.onRowClick,\n      },\n      props: {\n        ...props,\n        cellClassName: this.tableCellClassName,\n        headerCellClassName: \"title-th\",\n        data: this.songs,\n      },\n      style: { width: \"99.9%\" },\n    }\n    return this.songs.length ? (\n      <el-table class=\"song-table\" {...tableAttrs}>\n        {this.showColumns.map((column, index) => {\n          const { scopedSlots, ...columnProps } = column\n          return (\n            <el-table-column\n              key={index}\n              props={columnProps}\n              scopedSlots={scopedSlots}\n            ></el-table-column>\n          )\n        })}\n      </el-table>\n    ) : null\n  },\n}\n\nfunction genPropsAndAttrs(rawAttrs, componentProps) {\n  const props = {}\n  const attrs = {}\n  Object.keys(rawAttrs).forEach(key => {\n    const value = rawAttrs[key]\n    if (componentProps.hasOwnProperty(key)) {\n      props[key] = value\n    } else {\n      attrs[key] = value\n    }\n  })\n  return { props, attrs }\n}\n</script>\n\n<style lang=\"scss\">\n.song-table {\n  .title-th {\n    color: var(--font-color-grey2);\n    font-weight: normal;\n  }\n\n  .title-td {\n    color: var(--font-color-white);\n  }\n\n  .padding-space {\n    padding-left: 24px;\n  }\n\n  .song-active {\n    color: $theme-color;\n\n    .high-light-text {\n      color: $theme-color;\n    }\n  }\n\n  .index-wrap {\n    text-align: center;\n    color: var(--font-color-grey-shallow);\n  }\n\n  .img-wrap {\n    position: relative;\n    @include img-wrap(60px);\n\n    img {\n      border-radius: 4px;\n    }\n    .play-icon {\n      @include abs-center;\n    }\n  }\n  .high-light-text {\n    color: $blue;\n  }\n\n  .song-table-name-cell {\n    @include text-ellipsis;\n    display: flex;\n    align-items: center;\n    flex: 0 0 24px;\n\n    .song-table-name {\n      overflow: hidden;\n      @include text-ellipsis;\n    }\n\n    .mv-icon {\n      width: 24px;\n      margin-left: 4px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}