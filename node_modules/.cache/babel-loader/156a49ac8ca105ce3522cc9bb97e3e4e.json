{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/muise/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangsir/Desktop/muise/src/store/modules/user/getters.js","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/store/modules/user/getters.js","mtime":1592641032496},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { isDef } from \"@/utils\";\nexport var isLogin = function isLogin(state) {\n  return isDef(state.user.userId);\n}; // 根据用户请求的数据整合出菜单\n\nexport var userMenus = function userMenus(state) {\n  var user = state.user,\n      userPlaylist = state.userPlaylist;\n  var retMenus = [];\n  var userCreateList = [];\n  var userCollectList = [];\n  userPlaylist.forEach(function (playlist) {\n    var userId = playlist.userId;\n\n    if (user.userId === userId) {\n      userCreateList.push(playlist);\n    } else {\n      userCollectList.push(playlist);\n    }\n  });\n\n  var genPlaylistChildren = function genPlaylistChildren(playlist) {\n    return playlist.map(function (_ref) {\n      var id = _ref.id,\n          name = _ref.name;\n      return {\n        path: \"/playlist/\".concat(id),\n        meta: {\n          title: name,\n          icon: \"playlist-menu\"\n        }\n      };\n    });\n  };\n\n  if (userCreateList.length) {\n    retMenus.push({\n      type: \"playlist\",\n      title: \"创建的歌单\",\n      children: genPlaylistChildren(userCreateList)\n    });\n  }\n\n  if (userCollectList.length) {\n    retMenus.push({\n      type: \"playlist\",\n      title: \"收藏的歌单\",\n      children: genPlaylistChildren(userCollectList)\n    });\n  }\n\n  return retMenus;\n};",{"version":3,"sources":["/Users/zhangsir/Desktop/muise/src/store/modules/user/getters.js"],"names":["isDef","isLogin","state","user","userId","userMenus","userPlaylist","retMenus","userCreateList","userCollectList","forEach","playlist","push","genPlaylistChildren","map","id","name","path","meta","title","icon","length","type","children"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,SAAtB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SAAWF,KAAK,CAACE,KAAK,CAACC,IAAN,CAAWC,MAAZ,CAAhB;AAAA,CAAhB,C,CAEP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACH,KAAD,EAAW;AAAA,MAC3BC,IAD2B,GACLD,KADK,CAC3BC,IAD2B;AAAA,MACtBG,YADsB,GACLJ,KADK,CACtBI,YADsB;AAElC,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,eAAe,GAAG,EAAxB;AAEAH,EAAAA,YAAY,CAACI,OAAb,CAAqB,UAAAC,QAAQ,EAAI;AAAA,QACvBP,MADuB,GACZO,QADY,CACvBP,MADuB;;AAE/B,QAAID,IAAI,CAACC,MAAL,KAAgBA,MAApB,EAA4B;AAC1BI,MAAAA,cAAc,CAACI,IAAf,CAAoBD,QAApB;AACD,KAFD,MAEO;AACLF,MAAAA,eAAe,CAACG,IAAhB,CAAqBD,QAArB;AACD;AACF,GAPD;;AASA,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAF,QAAQ;AAAA,WAClCA,QAAQ,CAACG,GAAT,CAAa;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,UAAOC,IAAP,QAAOA,IAAP;AAAA,aAAmB;AAC9BC,QAAAA,IAAI,sBAAeF,EAAf,CAD0B;AAE9BG,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAEH,IADH;AAEJI,UAAAA,IAAI,EAAE;AAFF;AAFwB,OAAnB;AAAA,KAAb,CADkC;AAAA,GAApC;;AASA,MAAIZ,cAAc,CAACa,MAAnB,EAA2B;AACzBd,IAAAA,QAAQ,CAACK,IAAT,CAAc;AACZU,MAAAA,IAAI,EAAE,UADM;AAEZH,MAAAA,KAAK,EAAE,OAFK;AAGZI,MAAAA,QAAQ,EAAEV,mBAAmB,CAACL,cAAD;AAHjB,KAAd;AAKD;;AAED,MAAIC,eAAe,CAACY,MAApB,EAA4B;AAC1Bd,IAAAA,QAAQ,CAACK,IAAT,CAAc;AACZU,MAAAA,IAAI,EAAE,UADM;AAEZH,MAAAA,KAAK,EAAE,OAFK;AAGZI,MAAAA,QAAQ,EAAEV,mBAAmB,CAACJ,eAAD;AAHjB,KAAd;AAKD;;AAED,SAAOF,QAAP;AACD,CAzCM","sourcesContent":["import { isDef } from \"@/utils\";\n\nexport const isLogin = (state) => isDef(state.user.userId)\n\n// 根据用户请求的数据整合出菜单\nexport const userMenus = (state) => {\n  const {user,userPlaylist } = state\n  const retMenus = []\n  const userCreateList = []\n  const userCollectList = []\n\n  userPlaylist.forEach(playlist => {\n    const { userId } = playlist\n    if (user.userId === userId) {\n      userCreateList.push(playlist)\n    } else {\n      userCollectList.push(playlist)\n    }\n  })\n\n  const genPlaylistChildren = playlist =>\n    playlist.map(({ id, name }) => ({\n      path: `/playlist/${id}`,\n      meta: {\n        title: name,\n        icon: \"playlist-menu\"\n      },\n    }))\n\n  if (userCreateList.length) {\n    retMenus.push({\n      type: \"playlist\",\n      title: \"创建的歌单\",\n      children: genPlaylistChildren(userCreateList)\n    })\n  }\n\n  if (userCollectList.length) {\n    retMenus.push({\n      type: \"playlist\",\n      title: \"收藏的歌单\",\n      children: genPlaylistChildren(userCollectList)\n    })\n  }\n\n  return retMenus\n}"]}]}