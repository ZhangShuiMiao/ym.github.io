{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/page/search/playlists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/page/search/playlists.vue","mtime":1592641032494},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getSearch } from \"@/api\";\nimport PlaylistCard from \"@/components/playlist-card\";\nimport WithPagination from \"@/components/with-pagination\";\nvar SEARCH_TYPE_PLAYLIST = 1000;\nexport default {\n  inject: [\"searchRoot\"],\n  created: function created() {\n    this.getSearch = getSearch;\n  },\n  data: function data() {\n    return {\n      playlists: [],\n      playlistCount: 0\n    };\n  },\n  methods: {\n    onGetPlaylists: function onGetPlaylists(_ref) {\n      var _ref$result = _ref.result,\n          playlists = _ref$result.playlists,\n          playlistCount = _ref$result.playlistCount;\n      this.playlists = playlists;\n      this.playlistCount = playlistCount;\n      this.searchRoot.onUpdateCount(playlistCount);\n    }\n  },\n  computed: {\n    searchParams: function searchParams() {\n      return {\n        keywords: this.searchRoot.keywords,\n        type: SEARCH_TYPE_PLAYLIST\n      };\n    }\n  },\n  components: {\n    WithPagination: WithPagination,\n    PlaylistCard: PlaylistCard\n  }\n};",{"version":3,"sources":["playlists.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,SAAA,QAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,cAAA,MAAA,8BAAA;AACA,IAAA,oBAAA,GAAA,IAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,YAAA,CADA;AAEA,EAAA,OAFA,qBAEA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,GAJA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAIA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,gCACA;AAAA,6BAAA,MAAA;AAAA,UAAA,SAAA,eAAA,SAAA;AAAA,UAAA,aAAA,eAAA,aAAA;AACA,WAAA,SAAA,GAAA,SAAA;AACA,WAAA,aAAA,GAAA,aAAA;AACA,WAAA,UAAA,CAAA,aAAA,CAAA,aAAA;AACA;AALA,GAXA;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA;AAAA,QAAA,QAAA,EAAA,KAAA,UAAA,CAAA,QAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA;AAHA,GAlBA;AAuBA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,YAAA,EAAA;AAFA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"search-playlists\">\n    <WithPagination\n      :getData=\"getSearch\"\n      :getDataParams=\"searchParams\"\n      :limit=\"50\"\n      :scrollTarget=\"searchRoot.$refs && searchRoot.$refs.header\"\n      :total=\"playlistCount\"\n      @getDataSuccess=\"onGetPlaylists\"\n    >\n      <div class=\"list-wrap\">\n        <PlaylistCard\n          :desc=\"`播放量：${$utils.formatNumber(item.playCount)}`\"\n          :id=\"item.id\"\n          :img=\"item.coverImgUrl\"\n          :key=\"item.id\"\n          :name=\"item.name\"\n          v-for=\"item in playlists\"\n        />\n      </div>\n    </WithPagination>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { getSearch } from \"@/api\"\nimport PlaylistCard from \"@/components/playlist-card\"\nimport WithPagination from \"@/components/with-pagination\"\nconst SEARCH_TYPE_PLAYLIST = 1000\nexport default {\n  inject: [\"searchRoot\"],\n  created() {\n    this.getSearch = getSearch\n  },\n  data() {\n    return {\n      playlists: [],\n      playlistCount: 0\n    }\n  },\n  methods: {\n    onGetPlaylists({ result: { playlists, playlistCount } }) {\n      this.playlists = playlists\n      this.playlistCount = playlistCount\n      this.searchRoot.onUpdateCount(playlistCount)\n    }\n  },\n  computed: {\n    searchParams() {\n      return { keywords: this.searchRoot.keywords, type: SEARCH_TYPE_PLAYLIST }\n    }\n  },\n  components: {\n    WithPagination,\n    PlaylistCard\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.search-playlists {\n  max-width: 1000px;\n  padding: $page-padding;\n  margin: auto;\n\n  .list-wrap {\n    display: flex;\n    flex-wrap: wrap;\n  }\n}\n</style>\n"],"sourceRoot":"src/page/search"}]}