{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js!/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/ymyu/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangsir/Desktop/ymyu/src/store/modules/music/getters.js","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/store/modules/music/getters.js","mtime":1592641032495},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/zhangsir/Desktop/ymyu/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find-index\";\nimport { isDef, playModeMap } from '@/utils';\nexport var currentIndex = function currentIndex(state) {\n  var currentSong = state.currentSong,\n      playlist = state.playlist;\n  return playlist.findIndex(function (_ref) {\n    var id = _ref.id;\n    return id === currentSong.id;\n  });\n};\nexport var nextSong = function nextSong(state, getters) {\n  var _nextStratMap;\n\n  var playlist = state.playlist,\n      playMode = state.playMode;\n  var nextStratMap = (_nextStratMap = {}, _defineProperty(_nextStratMap, playModeMap.sequence.code, getSequenceNextIndex), _defineProperty(_nextStratMap, playModeMap.loop.code, getLoopNextIndex), _defineProperty(_nextStratMap, playModeMap.random.code, getRandomNextIndex), _nextStratMap);\n  var getNextStrat = nextStratMap[playMode];\n  var index = getNextStrat();\n  return playlist[index]; // 顺序\n\n  function getSequenceNextIndex() {\n    var nextIndex = getters.currentIndex + 1;\n\n    if (nextIndex > playlist.length - 1) {\n      nextIndex = 0;\n    }\n\n    return nextIndex;\n  } // 随机\n\n\n  function getRandomNextIndex() {\n    return getRandomIndex(playlist, getters.currentIndex);\n  } // 单曲\n\n\n  function getLoopNextIndex() {\n    return getters.currentIndex;\n  }\n}; // 上一首歌\n\nexport var prevSong = function prevSong(state, getters) {\n  var _prevStratMap;\n\n  var playlist = state.playlist,\n      playMode = state.playMode;\n  var prevStratMap = (_prevStratMap = {}, _defineProperty(_prevStratMap, playModeMap.sequence.code, genSequencePrevIndex), _defineProperty(_prevStratMap, playModeMap.loop.code, getLoopPrevIndex), _defineProperty(_prevStratMap, playModeMap.random.code, getRandomPrevIndex), _prevStratMap);\n  var getPrevStrat = prevStratMap[playMode];\n  var index = getPrevStrat();\n  return playlist[index];\n\n  function genSequencePrevIndex() {\n    var prevIndex = getters.currentIndex - 1;\n\n    if (prevIndex < 0) {\n      prevIndex = playlist.length - 1;\n    }\n\n    return prevIndex;\n  }\n\n  function getLoopPrevIndex() {\n    return getters.currentIndex;\n  }\n\n  function getRandomPrevIndex() {\n    return getRandomIndex(playlist, getters.currentIndex);\n  }\n}; // 当前是否有歌曲在播放\n\nexport var hasCurrentSong = function hasCurrentSong(state) {\n  return isDef(state.currentSong.id);\n};\n\nfunction getRandomIndex(playlist, currentIndex) {\n  // 防止无限循环\n  if (playlist.length === 1) {\n    return currentIndex;\n  }\n\n  var index = Math.round(Math.random() * (playlist.length - 1));\n\n  if (index === currentIndex) {\n    index = getRandomIndex(playlist, currentIndex);\n  }\n\n  return index;\n}",{"version":3,"sources":["/Users/zhangsir/Desktop/ymyu/src/store/modules/music/getters.js"],"names":["isDef","playModeMap","currentIndex","state","currentSong","playlist","findIndex","id","nextSong","getters","playMode","nextStratMap","sequence","code","getSequenceNextIndex","loop","getLoopNextIndex","random","getRandomNextIndex","getNextStrat","index","nextIndex","length","getRandomIndex","prevSong","prevStratMap","genSequencePrevIndex","getLoopPrevIndex","getRandomPrevIndex","getPrevStrat","prevIndex","hasCurrentSong","Math","round"],"mappings":"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","sourcesContent":["import { isDef, playModeMap } from '@/utils'\n\nexport const currentIndex = (state) => {\n  const { currentSong, playlist } = state\n  return playlist.findIndex(({ id }) => id === currentSong.id)\n}\n\nexport const nextSong = (state, getters) => {\n  const { playlist, playMode } = state\n  const nextStratMap = {\n    [playModeMap.sequence.code]: getSequenceNextIndex,\n    [playModeMap.loop.code]: getLoopNextIndex,\n    [playModeMap.random.code]: getRandomNextIndex\n  }\n  const getNextStrat = nextStratMap[playMode]\n  const index = getNextStrat()\n\n  return playlist[index]\n\n  // 顺序\n  function getSequenceNextIndex() {\n    let nextIndex = getters.currentIndex + 1\n    if (nextIndex > playlist.length - 1) {\n      nextIndex = 0\n    }\n    return nextIndex\n  }\n\n  // 随机\n  function getRandomNextIndex() {\n    return getRandomIndex(playlist, getters.currentIndex)\n  }\n\n  // 单曲\n  function getLoopNextIndex() {\n    return getters.currentIndex\n  }\n}\n\n// 上一首歌\nexport const prevSong = (state, getters) => {\n  const { playlist, playMode } = state\n  const prevStratMap = {\n    [playModeMap.sequence.code]: genSequencePrevIndex,\n    [playModeMap.loop.code]: getLoopPrevIndex,\n    [playModeMap.random.code]: getRandomPrevIndex\n  }\n  const getPrevStrat = prevStratMap[playMode]\n  const index = getPrevStrat()\n\n  return playlist[index]\n\n  function genSequencePrevIndex() {\n    let prevIndex = getters.currentIndex - 1\n    if (prevIndex < 0) {\n      prevIndex = playlist.length - 1\n    }\n    return prevIndex\n  }\n\n  function getLoopPrevIndex() {\n    return getters.currentIndex\n  }\n\n  function getRandomPrevIndex() {\n    return getRandomIndex(playlist, getters.currentIndex)\n  }\n}\n\n// 当前是否有歌曲在播放\nexport const hasCurrentSong = (state) => {\n  return isDef(state.currentSong.id)\n}\n\nfunction getRandomIndex(playlist, currentIndex) {\n  // 防止无限循环\n  if (playlist.length === 1) {\n    return currentIndex\n  }\n  let index = Math.round(Math.random() * (playlist.length - 1))\n  if (index === currentIndex) {\n    index = getRandomIndex(playlist, currentIndex)\n  }\n  return index\n}"]}]}