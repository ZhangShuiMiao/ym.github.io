{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/page/playlists/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/page/playlists/index.vue","mtime":1592641032493},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPlaylists as _getPlaylists, getTopPlaylists as _getTopPlaylists } from \"@/api\";\nimport PlaylistCard from \"@/components/playlist-card\";\nimport TopPlaylistCard from \"@/components/top-playlist-card\";\nimport { getPageOffset, scrollInto } from \"@/utils\";\nvar PAGE_SIZE = 50;\nexport default {\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.PAGE_SIZE = PAGE_SIZE;\n              this.tabs = [\"全部\", \"欧美\", \"华语\", \"流行\", \"说唱\", \"摇滚\", \"民谣\", \"电子\", \"轻音乐\", \"影视原声\", \"ACG\", \"怀旧\", \"治愈\", \"旅行\"];\n              this.initData();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  data: function data() {\n    return {\n      activeTabIndex: 0,\n      playlists: [],\n      currentPage: 0,\n      total: 0,\n      topPlaylist: {}\n    };\n  },\n  methods: {\n    // 获取歌单和精品歌单\n    initData: function () {\n      var _initData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.getPlaylists();\n                this.getTopPlaylists();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initData() {\n        return _initData.apply(this, arguments);\n      }\n\n      return initData;\n    }(),\n    getPlaylists: function () {\n      var _getPlaylists2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _ref, playlists, total;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _getPlaylists({\n                  limit: PAGE_SIZE,\n                  offset: getPageOffset(this.currentPage, PAGE_SIZE),\n                  cat: this.tabs[this.activeTabIndex]\n                });\n\n              case 2:\n                _ref = _context3.sent;\n                playlists = _ref.playlists;\n                total = _ref.total;\n                this.playlists = playlists;\n                this.total = total;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getPlaylists() {\n        return _getPlaylists2.apply(this, arguments);\n      }\n\n      return getPlaylists;\n    }(),\n    getTopPlaylists: function () {\n      var _getTopPlaylists2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var _ref2, playlists;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _getTopPlaylists({\n                  limit: 1,\n                  cat: this.tabs[this.activeTabIndex]\n                });\n\n              case 2:\n                _ref2 = _context4.sent;\n                playlists = _ref2.playlists;\n                this.topPlaylist = playlists[0] || {};\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTopPlaylists() {\n        return _getTopPlaylists2.apply(this, arguments);\n      }\n\n      return getTopPlaylists;\n    }(),\n    // 分页只重新获取歌单\n    onPageChange: function () {\n      var _onPageChange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(page) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.currentPage = page;\n                this.getPlaylists();\n                scrollInto(this.$refs.playlists);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onPageChange(_x) {\n        return _onPageChange.apply(this, arguments);\n      }\n\n      return onPageChange;\n    }(),\n    onTabChange: function onTabChange() {\n      this.initData();\n    }\n  },\n  components: {\n    TopPlaylistCard: TopPlaylistCard,\n    PlaylistCard: PlaylistCard\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,SAAA,YAAA,IAAA,aAAA,EAAA,eAAA,IAAA,gBAAA,QAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,eAAA,MAAA,gCAAA;AACA,SAAA,aAAA,EAAA,UAAA,QAAA,SAAA;AAEA,IAAA,SAAA,GAAA,EAAA;AACA,eAAA;AACA,EAAA,OADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAA,SAAA,GAAA,SAAA;AACA,mBAAA,IAAA,GAAA,CACA,IADA,EAEA,IAFA,EAGA,IAHA,EAIA,IAJA,EAKA,IALA,EAMA,IANA,EAOA,IAPA,EAQA,IARA,EASA,KATA,EAUA,MAVA,EAWA,KAXA,EAYA,IAZA,EAaA,IAbA,EAcA,IAdA,CAAA;AAgBA,mBAAA,QAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBA,EAAA,IArBA,kBAqBA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,CADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,CAHA;AAIA,MAAA,KAAA,EAAA,CAJA;AAKA,MAAA,WAAA,EAAA;AALA,KAAA;AAOA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,qBAAA,YAAA;AACA,qBAAA,eAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMA,IAAA,YANA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOA,aAAA,CAAA;AACA,kBAAA,KAAA,EAAA,SADA;AAEA,kBAAA,MAAA,EAAA,aAAA,CAAA,KAAA,WAAA,EAAA,SAAA,CAFA;AAGA,kBAAA,GAAA,EAAA,KAAA,IAAA,CAAA,KAAA,cAAA;AAHA,iBAAA,CAPA;;AAAA;AAAA;AAOA,gBAAA,SAPA,QAOA,SAPA;AAOA,gBAAA,KAPA,QAOA,KAPA;AAYA,qBAAA,SAAA,GAAA,SAAA;AACA,qBAAA,KAAA,GAAA,KAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeA,IAAA,eAfA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAgBA,gBAAA,CAAA;AACA,kBAAA,KAAA,EAAA,CADA;AAEA,kBAAA,GAAA,EAAA,KAAA,IAAA,CAAA,KAAA,cAAA;AAFA,iBAAA,CAhBA;;AAAA;AAAA;AAgBA,gBAAA,SAhBA,SAgBA,SAhBA;AAoBA,qBAAA,WAAA,GAAA,SAAA,CAAA,CAAA,CAAA,IAAA,EAAA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBA;AACA,IAAA,YAvBA;AAAA;AAAA;AAAA,gDAuBA,IAvBA;AAAA;AAAA;AAAA;AAAA;AAwBA,qBAAA,WAAA,GAAA,IAAA;AACA,qBAAA,YAAA;AACA,gBAAA,UAAA,CAAA,KAAA,KAAA,CAAA,SAAA,CAAA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4BA,IAAA,WA5BA,yBA4BA;AACA,WAAA,QAAA;AACA;AA9BA,GA9BA;AA8DA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA,eADA;AAEA,IAAA,YAAA,EAAA;AAFA;AA9DA,CAAA","sourcesContent":["// 推荐歌单页面\n<template>\n  <div\n    class=\"playlists\"\n    ref=\"playlists\"\n  >\n    <div\n      class=\"top-play-list-card\"\n      v-if=\"topPlaylist.id\"\n    >\n      <TopPlaylistCard\n        :desc=\"topPlaylist.description\"\n        :id=\"topPlaylist.id\"\n        :img=\"topPlaylist.coverImgUrl\"\n        :name=\"topPlaylist.name\"\n      />\n    </div>\n    <div class=\"tabs\">\n      <Tabs\n        :tabs=\"tabs\"\n        @tabChange=\"onTabChange\"\n        align=\"right\"\n        type=\"small\"\n        v-model=\"activeTabIndex\"\n      />\n    </div>\n    <div class=\"playlist-cards\">\n      <PlaylistCard\n        :desc=\"`播放量：${$utils.formatNumber(item.playCount)}`\"\n        :id=\"item.id\"\n        :img=\"item.coverImgUrl\"\n        :key=\"item.id\"\n        :name=\"item.name\"\n        v-for=\"item in playlists\"\n      />\n    </div>\n    <Pagination\n      :current-page.sync=\"currentPage\"\n      :page-size=\"PAGE_SIZE\"\n      :total=\"total\"\n      @current-change=\"onPageChange\"\n      class=\"pagination\"\n    ></Pagination>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { getPlaylists, getTopPlaylists } from \"@/api\"\nimport PlaylistCard from \"@/components/playlist-card\"\nimport TopPlaylistCard from \"@/components/top-playlist-card\"\nimport { getPageOffset, scrollInto } from \"@/utils\"\n\nconst PAGE_SIZE = 50\nexport default {\n  async created() {\n    this.PAGE_SIZE = PAGE_SIZE\n    this.tabs = [\n      \"全部\",\n      \"欧美\",\n      \"华语\",\n      \"流行\",\n      \"说唱\",\n      \"摇滚\",\n      \"民谣\",\n      \"电子\",\n      \"轻音乐\",\n      \"影视原声\",\n      \"ACG\",\n      \"怀旧\",\n      \"治愈\",\n      \"旅行\"\n    ]\n    this.initData()\n  },\n  data() {\n    return {\n      activeTabIndex: 0,\n      playlists: [],\n      currentPage: 0,\n      total: 0,\n      topPlaylist: {}\n    }\n  },\n  methods: {\n    // 获取歌单和精品歌单\n    async initData() {\n      this.getPlaylists()\n      this.getTopPlaylists()\n    },\n    async getPlaylists() {\n      const { playlists, total } = await getPlaylists({\n        limit: PAGE_SIZE,\n        offset: getPageOffset(this.currentPage, PAGE_SIZE),\n        cat: this.tabs[this.activeTabIndex]\n      })\n      this.playlists = playlists\n      this.total = total\n    },\n    async getTopPlaylists() {\n      const { playlists } = await getTopPlaylists({\n        limit: 1,\n        cat: this.tabs[this.activeTabIndex]\n      })\n      this.topPlaylist = playlists[0] || {}\n    },\n    // 分页只重新获取歌单\n    async onPageChange(page) {\n      this.currentPage = page\n      this.getPlaylists()\n      scrollInto(this.$refs.playlists)\n    },\n    onTabChange() {\n      this.initData()\n    }\n  },\n  components: {\n    TopPlaylistCard,\n    PlaylistCard\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.playlists {\n  padding: 12px;\n\n  .top-play-list-card {\n    margin-bottom: 16px;\n  }\n\n  .playlist-cards {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 36px;\n  }\n}\n</style>\n"],"sourceRoot":"src/page/playlists"}]}