{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js!/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/page/songs/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/page/songs/index.vue","mtime":1592641032494},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhangsir/Desktop/ymyu/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getTopSongs } from \"@/api\";\nimport { createSong } from \"@/utils\";\nimport SongTable from \"@/components/song-table\";\nexport default {\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.tabs = [{\n                title: \"全部\",\n                type: 0\n              }, {\n                title: \"华语\",\n                type: 7\n              }, {\n                title: \"欧美\",\n                type: 96\n              }, {\n                title: \"日本\",\n                type: 8\n              }, {\n                title: \"韩国\",\n                type: 16\n              }];\n              this.getSongs();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  data: function data() {\n    return {\n      activeTabIndex: 0,\n      songs: []\n    };\n  },\n  methods: {\n    getSongs: function () {\n      var _getSongs = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getTopSongs(this.tabs[this.activeTabIndex].type);\n\n              case 2:\n                _ref = _context2.sent;\n                data = _ref.data;\n                this.songs = data.map(function (song) {\n                  var id = song.id,\n                      name = song.name,\n                      artists = song.artists,\n                      duration = song.duration,\n                      mvid = song.mvid,\n                      _song$album = song.album,\n                      picUrl = _song$album.picUrl,\n                      albumName = _song$album.name;\n                  return createSong({\n                    id: id,\n                    name: name,\n                    artists: artists,\n                    duration: duration,\n                    albumName: albumName,\n                    img: picUrl,\n                    mvId: mvid\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getSongs() {\n        return _getSongs.apply(this, arguments);\n      }\n\n      return getSongs;\n    }()\n  },\n  components: {\n    SongTable: SongTable\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,WAAA,QAAA,OAAA;AACA,SAAA,UAAA,QAAA,SAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,OADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAA,IAAA,GAAA,CACA;AAAA,gBAAA,KAAA,EAAA,IAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eADA,EAEA;AAAA,gBAAA,KAAA,EAAA,IAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAFA,EAGA;AAAA,gBAAA,KAAA,EAAA,IAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAHA,EAIA;AAAA,gBAAA,KAAA,EAAA,IAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAJA,EAKA;AAAA,gBAAA,KAAA,EAAA,IAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eALA,CAAA;AAOA,mBAAA,QAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,CADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAIA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,WAAA,CAAA,KAAA,IAAA,CAAA,KAAA,cAAA,EAAA,IAAA,CAFA;;AAAA;AAAA;AAEA,gBAAA,IAFA,QAEA,IAFA;AAGA,qBAAA,KAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AAAA,sBAEA,EAFA,GAQA,IARA,CAEA,EAFA;AAAA,sBAGA,IAHA,GAQA,IARA,CAGA,IAHA;AAAA,sBAIA,OAJA,GAQA,IARA,CAIA,OAJA;AAAA,sBAKA,QALA,GAQA,IARA,CAKA,QALA;AAAA,sBAMA,IANA,GAQA,IARA,CAMA,IANA;AAAA,oCAQA,IARA,CAOA,KAPA;AAAA,sBAOA,MAPA,eAOA,MAPA;AAAA,sBAOA,SAPA,eAOA,IAPA;AASA,yBAAA,UAAA,CAAA;AACA,oBAAA,EAAA,EAAA,EADA;AAEA,oBAAA,IAAA,EAAA,IAFA;AAGA,oBAAA,OAAA,EAAA,OAHA;AAIA,oBAAA,QAAA,EAAA,QAJA;AAKA,oBAAA,SAAA,EAAA,SALA;AAMA,oBAAA,GAAA,EAAA,MANA;AAOA,oBAAA,IAAA,EAAA;AAPA,mBAAA,CAAA;AASA,iBAlBA,CAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAjBA;AAyCA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA;AAzCA,CAAA","sourcesContent":["// 最新音乐页面\n<template>\n  <div class=\"songs\">\n    <div class=\"tabs\">\n      <Tabs\n        :tabs=\"tabs\"\n        @tabChange=\"getSongs\"\n        align=\"right\"\n        type=\"small\"\n        v-model=\"activeTabIndex\"\n      />\n    </div>\n    <SongTable\n      :songs=\"songs\"\n      header-row-class-name=\"header-row\"\n    />\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { getTopSongs } from \"@/api\"\nimport { createSong } from \"@/utils\"\nimport SongTable from \"@/components/song-table\"\n\nexport default {\n  async created() {\n    this.tabs = [\n      { title: \"全部\", type: 0 },\n      { title: \"华语\", type: 7 },\n      { title: \"欧美\", type: 96 },\n      { title: \"日本\", type: 8 },\n      { title: \"韩国\", type: 16 }\n    ]\n    this.getSongs()\n  },\n  data() {\n    return {\n      activeTabIndex: 0,\n      songs: []\n    }\n  },\n  methods: {\n    async getSongs() {\n      const { data } = await getTopSongs(this.tabs[this.activeTabIndex].type)\n      this.songs = data.map(song => {\n        const {\n          id,\n          name,\n          artists,\n          duration,\n          mvid,\n          album: { picUrl, name: albumName }\n        } = song\n        return createSong({\n          id,\n          name,\n          artists,\n          duration,\n          albumName,\n          img: picUrl,\n          mvId: mvid\n        })\n      })\n    }\n  },\n  components: {\n    SongTable\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.songs {\n  padding: 12px;\n\n  .header-row {\n    display: none;\n  }\n}\n</style>\n"],"sourceRoot":"src/page/songs"}]}