{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js!/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/components/mini-player.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/components/mini-player.vue","mtime":1592641032488},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/zhangsir/Desktop/muise/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations, mapGetters, mapActions } from \"@/store/helper/music\";\nimport Storage from \"good-storage\";\nimport Share from \"@/components/share\";\nimport { VOLUME_KEY, playModeMap, isDef } from \"@/utils\";\nvar DEFAULT_VOLUME = 0.75;\nexport default {\n  data: function data() {\n    return {\n      isPlayErrorPromptShow: false,\n      songReady: false,\n      volume: Storage.get(VOLUME_KEY, DEFAULT_VOLUME)\n    };\n  },\n  mounted: function mounted() {\n    this.audio.volume = this.volume;\n  },\n  methods: _objectSpread({\n    togglePlaying: function togglePlaying() {\n      if (!this.currentSong.id) {\n        return;\n      }\n\n      this.setPlayingState(!this.playing);\n    },\n    ready: function ready() {\n      this.songReady = true;\n    },\n    play: function () {\n      var _play = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.songReady) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return this.audio.play();\n\n              case 4:\n                if (this.isPlayErrorPromptShow) {\n                  this.isPlayErrorPromptShow = false;\n                }\n\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                // 提示用户手动播放\n                this.isPlayErrorPromptShow = true;\n                this.setPlayingState(false);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function play() {\n        return _play.apply(this, arguments);\n      }\n\n      return play;\n    }(),\n    pause: function pause() {\n      this.audio.pause();\n    },\n    updateTime: function updateTime(e) {\n      var time = e.target.currentTime;\n      this.setCurrentTime(time);\n    },\n    prev: function prev() {\n      if (this.songReady) {\n        this.startSong(this.prevSong);\n      }\n    },\n    next: function next() {\n      if (this.songReady) {\n        this.startSong(this.nextSong);\n      }\n    },\n    end: function end() {\n      this.next();\n    },\n    onProgressChange: function onProgressChange(percent) {\n      this.audio.currentTime = this.currentSong.durationSecond * percent;\n      this.setPlayingState(true);\n    },\n    onVolumeChange: function onVolumeChange(percent) {\n      this.audio.volume = percent;\n      Storage.set(VOLUME_KEY, percent);\n    },\n    onChangePlayMode: function onChangePlayMode() {\n      var _this = this;\n\n      var modeKeys = Object.keys(playModeMap);\n      var currentModeIndex = modeKeys.findIndex(function (key) {\n        return playModeMap[key].code === _this.playMode;\n      });\n      var nextIndex = (currentModeIndex + 1) % modeKeys.length;\n      var nextModeKey = modeKeys[nextIndex];\n      var nextMode = playModeMap[nextModeKey];\n      this.setPlayMode(nextMode.code);\n    },\n    togglePlaylistShow: function togglePlaylistShow() {\n      this.setPlaylistShow(!this.isPlaylistShow);\n    },\n    togglePlayerShow: function togglePlayerShow() {\n      this.setPlayerShow(!this.isPlayerShow);\n    },\n    goGitHub: function goGitHub() {\n      window.open(\"https://github.com/sl1673495/vue-netease-music\");\n    }\n  }, mapMutations([\"setCurrentTime\", \"setPlayingState\", \"setPlayMode\", \"setPlaylistShow\", \"setPlayerShow\"]), {}, mapActions([\"startSong\"])),\n  watch: {\n    currentSong: function currentSong(newSong, oldSong) {\n      var _this2 = this;\n\n      // 清空了歌曲\n      if (!newSong.id) {\n        this.audio.pause();\n        this.audio.currentTime = 0;\n        return;\n      } // 单曲循环\n\n\n      if (oldSong && newSong.id === oldSong.id) {\n        this.setCurrentTime(0);\n        this.audio.currentTime = 0;\n        this.play();\n        return;\n      }\n\n      this.songReady = false;\n\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n\n      this.timer = setTimeout(function () {\n        _this2.play();\n      }, 1000);\n    },\n    playing: function playing(newPlaying) {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        newPlaying ? _this3.play() : _this3.pause();\n      });\n    }\n  },\n  computed: _objectSpread({\n    hasCurrentSong: function hasCurrentSong() {\n      return isDef(this.currentSong.id);\n    },\n    playIcon: function playIcon() {\n      return this.playing ? \"pause\" : \"play\";\n    },\n    currentMode: function currentMode() {\n      return playModeMap[this.playMode];\n    },\n    modeIcon: function modeIcon() {\n      return this.currentMode.icon;\n    },\n    playModeText: function playModeText() {\n      return this.currentMode.name;\n    },\n    audio: function audio() {\n      return this.$refs.audio;\n    },\n    // 播放的进度百分比\n    playedPercent: function playedPercent() {\n      var durationSecond = this.currentSong.durationSecond;\n      return Math.min(this.currentTime / durationSecond, 1) || 0;\n    },\n    playControlIcon: function playControlIcon() {\n      return this.isPlayerShow ? \"shrink\" : \"open\";\n    },\n    shareUrl: function shareUrl() {\n      return \"\".concat(window.location.origin, \"?shareMusicId=\").concat(this.currentSong.id);\n    }\n  }, mapState([\"currentSong\", \"currentTime\", \"playing\", \"playMode\", \"isPlaylistShow\", \"isPlaylistPromptShow\", \"isPlayerShow\"]), {}, mapGetters([\"prevSong\", \"nextSong\"])),\n  components: {\n    Share: Share\n  }\n};",{"version":3,"sources":["mini-player.vue"],"names":[],"mappings":"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","sourcesContent":["// 底部播放栏组件\n<template>\n  <div class=\"mini-player\" id=\"mini-player\">\n    <!-- 歌曲内容 -->\n    <div class=\"song\">\n      <template v-if=\"hasCurrentSong\">\n        <div @click=\"togglePlayerShow\" class=\"img-wrap\">\n          <div class=\"mask\"></div>\n          <img v-lazy=\"$utils.genImgUrl(currentSong.img, 80)\" class=\"blur\" />\n          <div class=\"player-control\">\n            <Icon :size=\"24\" :type=\"playControlIcon\" color=\"white\" />\n          </div>\n        </div>\n        <div class=\"content\">\n          <div class=\"top\">\n            <p class=\"name\">{{ currentSong.name }}</p>\n            <p class=\"split\">-</p>\n            <p class=\"artists\">{{ currentSong.artistsText }}</p>\n          </div>\n          <div class=\"time\">\n            <span class=\"played-time\">{{\n              $utils.formatTime(currentTime)\n            }}</span>\n            <span class=\"split\">/</span>\n            <span class=\"total-time\">{{\n              $utils.formatTime(currentSong.duration / 1000)\n            }}</span>\n          </div>\n        </div>\n      </template>\n    </div>\n    <!-- 控制台 -->\n    <div class=\"control\">\n      <Icon :size=\"24\" @click=\"prev\" class=\"icon\" type=\"prev\" />\n      <el-popover\n        :value=\"isPlayErrorPromptShow\"\n        placement=\"top\"\n        trigger=\"manual\"\n        width=\"160\"\n      >\n        <p>请点击开始播放。</p>\n        <div @click=\"togglePlaying\" class=\"play-icon\" slot=\"reference\">\n          <Icon :size=\"24\" :type=\"playIcon\" />\n        </div>\n      </el-popover>\n\n      <Icon :size=\"24\" @click=\"next\" class=\"icon\" type=\"next\" />\n    </div>\n\n    <div class=\"mode\">\n      <Share :shareUrl=\"shareUrl\" class=\"mode-item\" v-show=\"hasCurrentSong\" />\n\n      <!-- 模式 -->\n      <el-popover placement=\"top\" trigger=\"hover\" width=\"160\">\n        <p>{{ playModeText }}</p>\n        <Icon\n          :size=\"20\"\n          :type=\"modeIcon\"\n          @click=\"onChangePlayMode\"\n          class=\"mode-item\"\n          slot=\"reference\"\n        />\n      </el-popover>\n      <!-- 播放列表 -->\n      <el-popover\n        :value=\"isPlaylistPromptShow\"\n        placement=\"top\"\n        trigger=\"manual\"\n        width=\"160\"\n      >\n        <p>已更新歌单</p>\n        <Icon\n          :size=\"20\"\n          @click=\"togglePlaylistShow\"\n          class=\"mode-item\"\n          slot=\"reference\"\n          type=\"playlist\"\n        />\n      </el-popover>\n      <!-- 音量 -->\n      <div class=\"volume-item\">\n        <Volume :volume=\"volume\" @volumeChange=\"onVolumeChange\" />\n      </div>\n      <!-- github -->\n      <Icon :size=\"20\" @click=\"goGitHub\" class=\"mode-item\" type=\"github\" />\n    </div>\n    <div class=\"progress-bar-wrap\">\n      <ProgressBar\n        :disabled=\"!hasCurrentSong\"\n        :percent=\"playedPercent\"\n        @percentChange=\"onProgressChange\"\n      />\n    </div>\n    <audio\n      :src=\"currentSong.url\"\n      @canplay=\"ready\"\n      @ended=\"end\"\n      @timeupdate=\"updateTime\"\n      ref=\"audio\"\n    ></audio>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport {\n  mapState,\n  mapMutations,\n  mapGetters,\n  mapActions\n} from \"@/store/helper/music\"\nimport Storage from \"good-storage\"\nimport Share from \"@/components/share\"\nimport { VOLUME_KEY, playModeMap, isDef } from \"@/utils\"\n\nconst DEFAULT_VOLUME = 0.75\nexport default {\n  data() {\n    return {\n      isPlayErrorPromptShow: false,\n      songReady: false,\n      volume: Storage.get(VOLUME_KEY, DEFAULT_VOLUME)\n    }\n  },\n  mounted() {\n    this.audio.volume = this.volume\n  },\n  methods: {\n    togglePlaying() {\n      if (!this.currentSong.id) {\n        return\n      }\n      this.setPlayingState(!this.playing)\n    },\n    ready() {\n      this.songReady = true\n    },\n    async play() {\n      if (this.songReady) {\n        try {\n          await this.audio.play()\n          if (this.isPlayErrorPromptShow) {\n            this.isPlayErrorPromptShow = false\n          }\n        } catch (error) {\n          // 提示用户手动播放\n          this.isPlayErrorPromptShow = true\n          this.setPlayingState(false)\n        }\n      }\n    },\n    pause() {\n      this.audio.pause()\n    },\n    updateTime(e) {\n      const time = e.target.currentTime\n      this.setCurrentTime(time)\n    },\n    prev() {\n      if (this.songReady) {\n        this.startSong(this.prevSong)\n      }\n    },\n    next() {\n      if (this.songReady) {\n        this.startSong(this.nextSong)\n      }\n    },\n    end() {\n      this.next()\n    },\n    onProgressChange(percent) {\n      this.audio.currentTime = this.currentSong.durationSecond * percent\n      this.setPlayingState(true)\n    },\n    onVolumeChange(percent) {\n      this.audio.volume = percent\n      Storage.set(VOLUME_KEY, percent)\n    },\n    onChangePlayMode() {\n      const modeKeys = Object.keys(playModeMap)\n      const currentModeIndex = modeKeys.findIndex(\n        key => playModeMap[key].code === this.playMode\n      )\n      const nextIndex = (currentModeIndex + 1) % modeKeys.length\n      const nextModeKey = modeKeys[nextIndex]\n      const nextMode = playModeMap[nextModeKey]\n      this.setPlayMode(nextMode.code)\n    },\n    togglePlaylistShow() {\n      this.setPlaylistShow(!this.isPlaylistShow)\n    },\n    togglePlayerShow() {\n      this.setPlayerShow(!this.isPlayerShow)\n    },\n    goGitHub() {\n      window.open(\"https://github.com/sl1673495/vue-netease-music\")\n    },\n\n    ...mapMutations([\n      \"setCurrentTime\",\n      \"setPlayingState\",\n      \"setPlayMode\",\n      \"setPlaylistShow\",\n      \"setPlayerShow\"\n    ]),\n    ...mapActions([\"startSong\"])\n  },\n  watch: {\n    currentSong(newSong, oldSong) {\n      // 清空了歌曲\n      if (!newSong.id) {\n        this.audio.pause()\n        this.audio.currentTime = 0\n        return\n      }\n      // 单曲循环\n      if (oldSong && newSong.id === oldSong.id) {\n        this.setCurrentTime(0)\n        this.audio.currentTime = 0\n        this.play()\n        return\n      }\n      this.songReady = false\n      if (this.timer) {\n        clearTimeout(this.timer)\n      }\n      this.timer = setTimeout(() => {\n        this.play()\n      }, 1000)\n    },\n    playing(newPlaying) {\n      this.$nextTick(() => {\n        newPlaying ? this.play() : this.pause()\n      })\n    }\n  },\n  computed: {\n    hasCurrentSong() {\n      return isDef(this.currentSong.id)\n    },\n    playIcon() {\n      return this.playing ? \"pause\" : \"play\"\n    },\n    currentMode() {\n      return playModeMap[this.playMode]\n    },\n    modeIcon() {\n      return this.currentMode.icon\n    },\n    playModeText() {\n      return this.currentMode.name\n    },\n    audio() {\n      return this.$refs.audio\n    },\n    // 播放的进度百分比\n    playedPercent() {\n      const { durationSecond } = this.currentSong\n      return Math.min(this.currentTime / durationSecond, 1) || 0\n    },\n    playControlIcon() {\n      return this.isPlayerShow ? \"shrink\" : \"open\"\n    },\n    shareUrl() {\n      return `${window.location.origin}?shareMusicId=${this.currentSong.id}`\n    },\n    ...mapState([\n      \"currentSong\",\n      \"currentTime\",\n      \"playing\",\n      \"playMode\",\n      \"isPlaylistShow\",\n      \"isPlaylistPromptShow\",\n      \"isPlayerShow\"\n    ]),\n    ...mapGetters([\"prevSong\", \"nextSong\"])\n  },\n  components: { Share }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mini-player {\n  position: relative;\n  position: fixed;\n  z-index: $mini-player-z-index;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  height: $mini-player-height;\n  padding: 8px 16px;\n  padding-right: 24px;\n  background: var(--body-bgcolor);\n\n  .song {\n    display: flex;\n    flex: 4;\n    overflow: hidden;\n\n    .img-wrap {\n      position: relative;\n      margin-right: 8px;\n      border-radius: 6px;\n      overflow: hidden;\n      cursor: pointer;\n      @include img-wrap(40px);\n\n      img {\n        &.blur {\n          filter: blur(2px);\n        }\n      }\n\n      .player-control {\n        @include abs-center;\n      }\n\n      .mask {\n        @include abs-stretch;\n        background: rgba(0, 0, 0, 0.2);\n      }\n    }\n\n    .content {\n      flex: 1;\n      overflow: hidden;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-around;\n\n      .top {\n        display: flex;\n        align-items: flex-end;\n        white-space: nowrap;\n\n        .name {\n          color: var(--font-color-white);\n          @include text-ellipsis;\n        }\n\n        .split {\n          font-size: $font-size-xs;\n          margin: 0 4px;\n        }\n\n        .artists {\n          font-size: $font-size-xs;\n          @include text-ellipsis;\n        }\n      }\n\n      .time {\n        font-size: $font-size-xs;\n        color: var(--font-color-grey);\n\n        .split {\n          margin: 0 4px;\n        }\n      }\n    }\n  }\n\n  .control {\n    position: absolute;\n    height: 100%;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 200px;\n    @include flex-center();\n\n    .play-icon {\n      @include flex-center();\n      position: relative;\n      width: 45px;\n      height: 45px;\n      margin: 0 16px;\n      border-radius: 50%;\n      background: $theme-color;\n      cursor: pointer;\n\n      i {\n        color: #fff;\n      }\n      .icon-play {\n        transform: translateX(1px);\n      }\n    }\n\n    .icon {\n      color: $theme-color;\n    }\n  }\n\n  .mode {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    flex: 6;\n\n    .mode-item {\n      display: block;\n      margin-right: 16px;\n      width: 22px;\n    }\n\n    .volume-item {\n      margin-right: 22px;\n    }\n  }\n\n  .progress-bar-wrap {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -14px;\n  }\n}\n\n.icon {\n  color: var(--font-color);\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components"}]}