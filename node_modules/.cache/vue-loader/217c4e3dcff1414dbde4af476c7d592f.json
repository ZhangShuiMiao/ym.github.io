{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/components/song-table.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/components/song-table.vue","mtime":1592641032490},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.song-table {\n  .title-th {\n    color: var(--font-color-grey2);\n    font-weight: normal;\n  }\n\n  .title-td {\n    color: var(--font-color-white);\n  }\n\n  .padding-space {\n    padding-left: 24px;\n  }\n\n  .song-active {\n    color: $theme-color;\n\n    .high-light-text {\n      color: $theme-color;\n    }\n  }\n\n  .index-wrap {\n    text-align: center;\n    color: var(--font-color-grey-shallow);\n  }\n\n  .img-wrap {\n    position: relative;\n    @include img-wrap(60px);\n\n    img {\n      border-radius: 4px;\n    }\n    .play-icon {\n      @include abs-center;\n    }\n  }\n  .high-light-text {\n    color: $blue;\n  }\n\n  .song-table-name-cell {\n    @include text-ellipsis;\n    display: flex;\n    align-items: center;\n    flex: 0 0 24px;\n\n    .song-table-name {\n      overflow: hidden;\n      @include text-ellipsis;\n    }\n\n    .mv-icon {\n      width: 24px;\n      margin-left: 4px;\n    }\n  }\n}\n",{"version":3,"sources":["song-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"song-table.vue","sourceRoot":"src/components","sourcesContent":["<script>\nimport ElTable from \"element-ui/lib/table\"\nimport { mapMutations, mapActions, mapState } from \"@/store/helper/music\"\nimport { pad, goMvWithCheck } from \"@/utils\"\n\nexport default {\n  props: {\n    hideColumns: {\n      type: Array,\n      default: () => [],\n    },\n    songs: {\n      type: Array,\n      default: () => [],\n    },\n    highlightText: {\n      type: String,\n      default: \"\",\n    },\n    // 名字下面渲染的额外内容\n    renderNameDesc: {\n      type: Function,\n    },\n  },\n  data() {\n    const commonHighLightSlotScopes = {\n      default: scope => {\n        const text = scope.row[scope.column.property]\n        return (\n          <HighlightText\n            class=\"song-table-name\"\n            text={text}\n            highlightText={this.highlightText}\n          />\n        )\n      },\n    }\n    return {\n      columns: [\n        {\n          prop: \"index\",\n          label: \"\",\n          width: \"70\",\n          scopedSlots: {\n            default: scope => {\n              return (\n                <div class=\"index-wrap\">\n                  {this.isActiveSong(scope.row) ? (\n                    <Icon class=\"horn\" type=\"horn\" color=\"theme\" />\n                  ) : (\n                    // 补上左边的0\n                    <span>{pad(scope.$index + 1)}</span>\n                  )}\n                </div>\n              )\n            },\n          },\n        },\n        {\n          prop: \"img\",\n          label: \" \",\n          width: \"100\",\n          scopedSlots: {\n            default: scope => {\n              return (\n                <div class=\"img-wrap\">\n                  <img v-lazy={this.$utils.genImgUrl(scope.row.img, 120)} />\n                  <PlayIcon class=\"play-icon\" />\n                </div>\n              )\n            },\n          },\n        },\n        {\n          prop: \"name\",\n          label: \"音乐标题\",\n          className: \"title-td\",\n          scopedSlots: {\n            default: scope => {\n              const {\n                row: { mvId },\n              } = scope\n\n              const onGoMv = async e => {\n                e.stopPropagation()\n                goMvWithCheck(mvId)\n              }\n\n              return (\n                <div>\n                  <div class=\"song-table-name-cell\">\n                    {commonHighLightSlotScopes.default(scope)}\n\n                    {mvId ? (\n                      <Icon\n                        class=\"mv-icon\"\n                        onClick={onGoMv}\n                        type=\"mv\"\n                        color=\"theme\"\n                        size={18}\n                      />\n                    ) : null}\n                  </div>\n\n                  {this.renderNameDesc ? this.renderNameDesc(scope) : null}\n                </div>\n              )\n            },\n          },\n        },\n        {\n          prop: \"artistsText\",\n          label: \"歌手\",\n          scopedSlots: commonHighLightSlotScopes,\n        },\n        {\n          prop: \"albumName\",\n          label: \"专辑\",\n          scopedSlots: commonHighLightSlotScopes,\n        },\n        {\n          prop: \"durationSecond\",\n          label: \"时长\",\n          width: \"100\",\n          scopedSlots: {\n            default: scope => {\n              return (\n                <span>{this.$utils.formatTime(scope.row.durationSecond)}</span>\n              )\n            },\n          },\n        },\n      ],\n    }\n  },\n  methods: {\n    onRowClick(song) {\n      this.startSong(song)\n      this.setPlaylist(this.songs)\n    },\n    isActiveSong(song) {\n      return song.id === this.currentSong.id\n    },\n    tableCellClassName(args) {\n      const { row, columnIndex } = args\n      const cellClassNameProp = this.$attrs.cellClassName\n\n      let retCls = []\n      // 执行外部传入的方法\n      if (cellClassNameProp) {\n        const propRet = cellClassNameProp(args)\n        if (propRet) {\n          retCls.push(propRet)\n        }\n      }\n      if (\n        this.isActiveSong(row) &&\n        columnIndex ===\n          this.showColumns.findIndex(({ prop }) => prop === \"name\")\n      ) {\n        retCls.push(\"song-active\")\n      }\n      return retCls.join(\" \")\n    },\n    ...mapMutations([\"setPlaylist\"]),\n    ...mapActions([\"startSong\"]),\n  },\n  computed: {\n    showColumns() {\n      const hideColumns = this.hideColumns.slice()\n      const reference = this.songs[0]\n      const { img } = reference\n      if (!img) {\n        hideColumns.push(\"img\")\n      }\n      return this.columns.filter(column => {\n        return !hideColumns.find(hideColumn => hideColumn === column.prop)\n      })\n    },\n    ...mapState([\"currentSong\"]),\n  },\n  render() {\n    const elTableProps = ElTable.props\n    // 从$attrs里提取作为prop的值\n    const { props, attrs } = genPropsAndAttrs(this.$attrs, elTableProps)\n    const tableAttrs = {\n      attrs,\n      on: {\n        ...this.$listeners,\n        [\"row-click\"]: this.onRowClick,\n      },\n      props: {\n        ...props,\n        cellClassName: this.tableCellClassName,\n        headerCellClassName: \"title-th\",\n        data: this.songs,\n      },\n      style: { width: \"99.9%\" },\n    }\n    return this.songs.length ? (\n      <el-table class=\"song-table\" {...tableAttrs}>\n        {this.showColumns.map((column, index) => {\n          const { scopedSlots, ...columnProps } = column\n          return (\n            <el-table-column\n              key={index}\n              props={columnProps}\n              scopedSlots={scopedSlots}\n            ></el-table-column>\n          )\n        })}\n      </el-table>\n    ) : null\n  },\n}\n\nfunction genPropsAndAttrs(rawAttrs, componentProps) {\n  const props = {}\n  const attrs = {}\n  Object.keys(rawAttrs).forEach(key => {\n    const value = rawAttrs[key]\n    if (componentProps.hasOwnProperty(key)) {\n      props[key] = value\n    } else {\n      attrs[key] = value\n    }\n  })\n  return { props, attrs }\n}\n</script>\n\n<style lang=\"scss\">\n.song-table {\n  .title-th {\n    color: var(--font-color-grey2);\n    font-weight: normal;\n  }\n\n  .title-td {\n    color: var(--font-color-white);\n  }\n\n  .padding-space {\n    padding-left: 24px;\n  }\n\n  .song-active {\n    color: $theme-color;\n\n    .high-light-text {\n      color: $theme-color;\n    }\n  }\n\n  .index-wrap {\n    text-align: center;\n    color: var(--font-color-grey-shallow);\n  }\n\n  .img-wrap {\n    position: relative;\n    @include img-wrap(60px);\n\n    img {\n      border-radius: 4px;\n    }\n    .play-icon {\n      @include abs-center;\n    }\n  }\n  .high-light-text {\n    color: $blue;\n  }\n\n  .song-table-name-cell {\n    @include text-ellipsis;\n    display: flex;\n    align-items: center;\n    flex: 0 0 24px;\n\n    .song-table-name {\n      overflow: hidden;\n      @include text-ellipsis;\n    }\n\n    .mv-icon {\n      width: 24px;\n      margin-left: 4px;\n    }\n  }\n}\n</style>\n"]}]}