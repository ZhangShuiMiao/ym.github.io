{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/page/discovery/new-songs.vue?vue&type=style&index=0&id=a2aa8cfa&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/page/discovery/new-songs.vue","mtime":1592641032492},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.new-songs {\n  margin-bottom: 36px;\n  .list-wrap {\n    display: flex;\n\n    .list {\n      flex: 1;\n      overflow: hidden;\n    }\n  }\n}\n",{"version":3,"sources":["new-songs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"new-songs.vue","sourceRoot":"src/page/discovery","sourcesContent":["<template>\n  <div\n    class=\"new-songs\"\n    v-if=\"list.length\"\n  >\n    <Title>最新音乐</Title>\n    <div class=\"list-wrap\">\n      <div\n        :key=\"listIndex\"\n        class=\"list\"\n        v-for=\"(list, listIndex) in thunkedList\"\n      >\n        <SongCard\n          :key=\"item.id\"\n          :order=\"getSongOrder(listIndex, index)\"\n          @click.native=\"onClickSong(listIndex, index)\"\n          class=\"song-card\"\n          v-bind=\"nomalizeSong(item)\"\n          v-for=\"(item,index) in list\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapMutations } from \"@/store/helper/music\"\nimport { getNewSongs } from \"@/api\"\nimport SongCard from \"@/components/song-card\"\nimport { createSong } from \"@/utils\"\n\nconst songsLimit = 10\nexport default {\n  async created() {\n    const { result } = await getNewSongs()\n    this.list = result\n  },\n  data() {\n    return {\n      chunkLimit: Math.ceil(songsLimit / 2),\n      list: []\n    }\n  },\n  methods: {\n    getSongOrder(listIndex, index) {\n      return listIndex * this.chunkLimit + index + 1\n    },\n    nomalizeSong(song) {\n      const {\n        id,\n        name,\n        song: {\n          mvid,\n          artists,\n          album: { blurPicUrl },\n          duration\n        }\n      } = song\n      return createSong({\n        id,\n        name,\n        img: blurPicUrl,\n        artists,\n        duration,\n        mvId: mvid\n      })\n    },\n    onClickSong(listIndex, index) {\n      // 这里因为getSongOrder是从1开始显示, 所以当做数组下标需要减一\n      const nomalizedSongIndex = this.getSongOrder(listIndex, index) - 1\n      const nomalizedSong = this.normalizedSongs[nomalizedSongIndex]\n      this.startSong(nomalizedSong)\n      this.setPlaylist(this.normalizedSongs)\n    },\n    ...mapMutations([\"setPlaylist\"]),\n    ...mapActions([\"startSong\"])\n  },\n  computed: {\n    thunkedList() {\n      return [\n        this.list.slice(0, this.chunkLimit),\n        this.list.slice(this.chunkLimit, this.list.length)\n      ]\n    },\n    normalizedSongs() {\n      return this.list.map(song => this.nomalizeSong(song))\n    }\n  },\n  components: { SongCard }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.new-songs {\n  margin-bottom: 36px;\n  .list-wrap {\n    display: flex;\n\n    .list {\n      flex: 1;\n      overflow: hidden;\n    }\n  }\n}\n</style>"]}]}