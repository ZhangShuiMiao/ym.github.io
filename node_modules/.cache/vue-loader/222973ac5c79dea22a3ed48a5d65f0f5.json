{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/components/with-pagination.vue?vue&type=style&index=0&id=772dc5dc&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/components/with-pagination.vue","mtime":1592641032491},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.pagination-wrap {\n  margin-top: 16px;\n}\n",{"version":3,"sources":["with-pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA","file":"with-pagination.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"with-pagination\">\n    <slot></slot>\n    <div class=\"pagination-wrap\">\n      <Pagination\n        :current-page.sync=\"currentPage\"\n        :page-size=\"limit\"\n        :total=\"total\"\n        @current-change=\"onPageChange\"\n        class=\"pagination\"\n      />\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { getPageOffset, scrollInto } from \"@/utils\"\n\nexport default {\n  props: {\n    getData: {\n      type: Function,\n      required: true\n    },\n    getDataParams: {\n      type: Object,\n      default: () => ({})\n    },\n    limit: {\n      type: Number,\n      default: 10\n    },\n    scrollTarget: {\n      type: HTMLElement\n    },\n    total: {\n      type: Number,\n      default: 0\n    }\n  },\n  created() {\n    this.onPageChange()\n  },\n  data() {\n    return {\n      currentPage: 1\n    }\n  },\n  methods: {\n    async onPageChange() {\n      try {\n        const result = await this.getData({\n          limit: this.limit,\n          offset: getPageOffset(this.currentPage, this.limit),\n          ...this.getDataParams\n        })\n        this.$emit(\"getDataSuccess\", result)\n        // 如果传入了滚动的目标对象 分页后自动滚入\n        if (this.scrollTarget) {\n          scrollInto(this.scrollTarget)\n        }\n      } catch (error) {\n        this.$emit(\"getDataError\", error)\n      }\n    }\n  },\n  watch: {\n    getDataParams: {\n      deep: true,\n      handler() {\n        this.currentPage = 1\n        this.onPageChange()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.pagination-wrap {\n  margin-top: 16px;\n}\n</style>\n"]}]}