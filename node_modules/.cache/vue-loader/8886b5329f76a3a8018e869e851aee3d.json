{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/page/search/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/page/search/index.vue","mtime":1592641032493},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState as mapGlobalState } from \"@/store/helper/global\"\nconst tabs = [\n  {\n    title: \"歌曲\",\n    key: \"songs\",\n    to: \"songs\"\n  },\n  {\n    title: \"歌单\",\n    key: \"playlists\",\n    to: \"playlists\"\n  },\n  {\n    title: \"MV\",\n    key: \"mvs\",\n    to: \"mvs\"\n  }\n]\nexport default {\n  props: [\"keywords\"],\n  provide() {\n    return {\n      searchRoot: this\n    }\n  },\n  created() {\n    this.tabs = tabs\n  },\n  data() {\n    return {\n      count: 0\n    }\n  },\n  methods: {\n    onUpdateCount(count) {\n      this.count = count\n    }\n  },\n  computed: {\n    showEmpty() {\n      return !this.axiosLoading && this.count === 0\n    },\n    ...mapGlobalState([\"axiosLoading\"])\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/search","sourcesContent":["// 搜索详情页面\n<template>\n  <div class=\"search-detail\">\n    <div\n      class=\"header\"\n      ref=\"header\"\n    >\n      <span class=\"keywords\">{{keywords}}</span>\n      <span class=\"found\">找到{{count}}个结果</span>\n    </div>\n    <div class=\"tabs-wrap\">\n      <Tabs\n        :tabs=\"tabs\"\n        itemClass=\"search-tab-item\"\n      />\n    </div>\n    <Empty\n      class=\"empty\"\n      v-if=\"showEmpty\"\n    >暂无结果</Empty>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { mapState as mapGlobalState } from \"@/store/helper/global\"\nconst tabs = [\n  {\n    title: \"歌曲\",\n    key: \"songs\",\n    to: \"songs\"\n  },\n  {\n    title: \"歌单\",\n    key: \"playlists\",\n    to: \"playlists\"\n  },\n  {\n    title: \"MV\",\n    key: \"mvs\",\n    to: \"mvs\"\n  }\n]\nexport default {\n  props: [\"keywords\"],\n  provide() {\n    return {\n      searchRoot: this\n    }\n  },\n  created() {\n    this.tabs = tabs\n  },\n  data() {\n    return {\n      count: 0\n    }\n  },\n  methods: {\n    onUpdateCount(count) {\n      this.count = count\n    }\n  },\n  computed: {\n    showEmpty() {\n      return !this.axiosLoading && this.count === 0\n    },\n    ...mapGlobalState([\"axiosLoading\"])\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.search-detail {\n  .header {\n    padding: 20px 32px;\n\n    .keywords {\n      display: inline-block;\n      margin-right: 4px;\n      font-size: $font-size-title-lg;\n      font-weight: $font-weight-bold;\n    }\n\n    .found {\n      font-size: $font-size-sm;\n      color: var(--font-color-grey-shallow);\n      letter-spacing: 2px;\n    }\n  }\n\n  .tabs-wrap {\n    padding: 0 28px;\n    border-bottom: 1px solid var(--border);\n\n    /deep/.search-tab-item {\n      font-size: $font-size;\n    }\n  }\n}\n</style>\n"]}]}