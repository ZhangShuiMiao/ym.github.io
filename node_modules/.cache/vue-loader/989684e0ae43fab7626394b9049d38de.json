{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/components/player.vue?vue&type=style&index=0&id=aef6e816&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/components/player.vue","mtime":1592641032489},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@keyframes rotate {\n  0% {\n    transform: rotate(0);\n  }\n\n  100% {\n    transform: rotate(1turn);\n  }\n}\n\n$img-left-padding: 36px;\n$img-outer-border-d: 320px;\n$img-outer-d: 300px;\n\n.player {\n  position: fixed;\n  top: $header-height;\n  bottom: $mini-player-height;\n  left: 0;\n  right: 0;\n  padding: 0 36px;\n  background: var(--player-bgcolor);\n  z-index: $song-detail-z-index;\n  overflow: hidden;\n  overflow-y: auto;\n  transition: transform 0.5s;\n\n  &.hide {\n    transform: translateY(105%);\n  }\n\n  &.show {\n    transform: none;\n  }\n\n  .content {\n    max-width: 870px;\n    margin: auto;\n\n    .song {\n      display: flex;\n\n      .left {\n        position: relative;\n        padding: 80px 70px 0 $img-left-padding;\n        display: flex;\n        justify-content: center;\n\n        $support-d: 30px;\n        $support-d-half: $support-d / 2;\n        .play-bar-support {\n          position: absolute;\n          left: $img-left-padding + $img-outer-border-d / 2 - $support-d / 2;\n          top: -$support-d-half;\n          width: $support-d;\n          height: $support-d;\n          z-index: 2;\n        }\n\n        .play-bar {\n          $w: 100px;\n          $h: 146px;\n          position: absolute;\n          top: 0;\n          left: $img-left-padding + $img-outer-border-d / 2 - 6px;\n          width: $w;\n          height: $h;\n          z-index: 1;\n          transform-origin: 0 0;\n          transform: rotate(-30deg);\n          transition: all 0.3s;\n\n          &.playing {\n            transform: rotate(5deg);\n          }\n        }\n\n        .img-outer-border {\n          @include round($img-outer-border-d);\n          @include flex-center;\n          background: var(--song-shallow-grey-bg);\n\n          .img-outer {\n            @include round($img-outer-d);\n            @include flex-center;\n            background: $black;\n            background: linear-gradient(-45deg, #333540, #070708, #333540);\n            animation: rotate 20s linear infinite;\n\n            &.paused {\n              animation-play-state: paused;\n            }\n\n            .img-wrap {\n              @include img-wrap(200px);\n\n              img {\n                border-radius: 50%;\n              }\n            }\n          }\n        }\n      }\n\n      .right {\n        flex: 1;\n        padding-top: 45px;\n        .name-wrap {\n          display: flex;\n          align-items: center;\n          margin-bottom: 16px;\n\n          .name {\n            font-size: $font-size-title-lg;\n            color: var(--font-color-white);\n          }\n\n          .mv-tag {\n            display: inline-block;\n            margin-left: 8px;\n            padding: 2px;\n            border: 1px solid currentColor;\n            border-radius: 2px;\n            color: $theme-color;\n            cursor: pointer;\n          }\n        }\n\n        .artists {\n          margin-bottom: 16px;\n        }\n\n        .desc {\n          display: flex;\n          font-size: $font-size-sm;\n          margin-bottom: 30px;\n\n          .desc-item {\n            display: flex;\n            margin-right: 32px;\n            .label {\n              display: inline-block;\n              margin-right: 4px;\n            }\n\n            .value {\n              color: $blue;\n            }\n          }\n        }\n\n        .lyric-wrap {\n          width: 380px;\n          height: 350px;\n          mask-image: linear-gradient(\n            180deg,\n            hsla(0, 0%, 100%, 0) 0,\n            hsla(0, 0%, 100%, 0.6) 15%,\n            #fff 25%,\n            #fff 75%,\n            hsla(0, 0%, 100%, 0.6) 85%,\n            hsla(0, 0%, 100%, 0)\n          );\n\n          .lyric-item {\n            margin-bottom: 16px;\n            font-size: $font-size-sm;\n\n            &.active {\n              font-size: $font-size;\n              color: var(--font-color-white);\n              font-weight: $font-weight-bold;\n            }\n\n            .lyric-text {\n              margin-bottom: 8px;\n            }\n          }\n        }\n      }\n    }\n\n    .bottom {\n      display: flex;\n      margin-top: 48px;\n      margin-bottom: 36px;\n\n      .left {\n        flex: 1;\n      }\n\n      .right {\n        padding-left: 36px;\n        width: 28%;\n        overflow: hidden;\n\n        .simi-playlists {\n          margin-bottom: 36px;\n        }\n\n        .simi-songs {\n          .play-icon {\n            @include abs-center;\n          }\n        }\n\n        .simi-item {\n          margin-bottom: 6px;\n        }\n\n        .title {\n          font-size: $font-size-lg;\n          font-weight: $font-weight-bold;\n          margin-bottom: 12px;\n        }\n\n        .desc {\n          display: flex;\n          align-items: center;\n\n          .count {\n            margin-left: 4px;\n          }\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["player.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"player.vue","sourceRoot":"src/components","sourcesContent":["<template >\n  <transition name=\"slide\">\n    <div\n      v-if=\"hasCurrentSong\"\n      :class=\"getPlayerShowCls()\"\n      class=\"player\"\n    >\n      <div class=\"content\">\n        <div class=\"song\">\n          <div class=\"left\">\n            <img\n              class=\"play-bar-support\"\n              src=\"@/assets/image/play-bar-support.png\"\n            />\n            <img\n              :class=\"{playing}\"\n              class=\"play-bar\"\n              src=\"@/assets/image/play-bar.png\"\n            />\n            <div\n              class=\"img-outer-border\"\n              ref=\"disc\"\n            >\n              <div\n                :class=\"{paused: !playing}\"\n                class=\"img-outer\"\n                ref=\"discRotate\"\n              >\n                <div class=\"img-wrap\">\n                  <img v-lazy=\"$utils.genImgUrl(currentSong.img, 400)\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"right\">\n            <div class=\"name-wrap\">\n              <p class=\"name\">{{currentSong.name}}</p>\n              <span\n                @click=\"onGoMv\"\n                class=\"mv-tag\"\n                v-if=\"currentSong.mvId\"\n              >MV</span>\n            </div>\n            <div class=\"desc\">\n              <div class=\"desc-item\">\n                <span class=\"label\">歌手：</span>\n                <div class=\"value\">{{currentSong.artistsText}}</div>\n              </div>\n            </div>\n            <empty v-if=\"nolyric\">还没有歌词哦~</empty>\n            <Scroller\n              :data=\"lyric\"\n              :options=\"{disableTouch: true}\"\n              @init=\"onInitScroller\"\n              class=\"lyric-wrap\"\n              ref=\"scroller\"\n              v-else\n            >\n              <div>\n                <div\n                  :class=\"getActiveCls(index)\"\n                  :key=\"index\"\n                  class=\"lyric-item\"\n                  ref=\"lyric\"\n                  v-for=\"(l,index) in lyricWithTranslation\"\n                >\n                  <p\n                    :key=\"contentIndex\"\n                    class=\"lyric-text\"\n                    v-for=\"(content, contentIndex) in l.contents\"\n                  >{{content}}</p>\n                </div>\n              </div>\n            </Scroller>\n          </div>\n        </div>\n        <div class=\"bottom\">\n          <div class=\"left\">\n            <Comments\n              :id=\"currentSong.id\"\n              ref=\"comments\"\n              v-if=\"currentSong.id\"\n            />\n          </div>\n          <div\n            class=\"right\"\n            v-if=\"simiPlaylists.concat(simiSongs).length\"\n          >\n            <Loading\n              :loading=\"simiLoading\"\n              v-if=\"simiLoading\"\n            />\n            <div v-else>\n              <div\n                class=\"simi-playlists\"\n                v-if=\"simiPlaylists.length\"\n              >\n                <p class=\"title\">包含这首歌的歌单</p>\n                <div\n                  :key=\"simiPlaylist.id\"\n                  class=\"simi-item\"\n                  v-for=\"simiPlaylist in simiPlaylists\"\n                >\n                  <Card\n                    :img=\"simiPlaylist.coverImgUrl\"\n                    :name=\"simiPlaylist.name\"\n                    @click=\"onClickPlaylist(simiPlaylist.id)\"\n                  >\n                    <template v-slot:desc>\n                      <div class=\"desc\">\n                        <Icon\n                          :size=\"12\"\n                          color=\"shallow\"\n                          type=\"play\"\n                        />\n                        <p class=\"count\">{{$utils.formatNumber(simiPlaylist.playCount)}}</p>\n                      </div>\n                    </template>\n                  </Card>\n                </div>\n              </div>\n              <div\n                class=\"simi-songs\"\n                v-if=\"simiSongs.length\"\n              >\n                <p class=\"title\">相似歌曲</p>\n                <div\n                  :key=\"simiSong.id\"\n                  class=\"simi-item\"\n                  v-for=\"simiSong in simiSongs\"\n                >\n                  <Card\n                    :desc=\"simiSong.artistsText\"\n                    :img=\"simiSong.img\"\n                    :name=\"simiSong.name\"\n                    @click=\"onClickSong(simiSong)\"\n                  >\n                    <template v-slot:img-mask>\n                      <PlayIcon class=\"play-icon\" />\n                    </template>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { getLyric, getSimiSongs, getSimiPlaylists } from \"@/api\"\nimport lyricParser from \"@/utils/lrcparse\"\nimport { debounce, isDef, createSong, goMvWithCheck } from \"@/utils\"\nimport Comments from \"@/components/comments\"\nimport { mapState, mapMutations, mapActions, mapGetters } from \"@/store/helper/music\"\n\nconst WHEEL_TYPE = \"wheel\"\nconst SCROLL_TYPE = \"scroll\"\n// 恢复自动滚动的定时器时间\nconst AUTO_SCROLL_RECOVER_TIME = 1000\nexport default {\n  created() {\n    this.lyricScrolling = {\n      [WHEEL_TYPE]: false,\n      [SCROLL_TYPE]: false\n    }\n    this.lyricTimer = {\n      [WHEEL_TYPE]: null,\n      [SCROLL_TYPE]: null\n    }\n  },\n  data() {\n    return {\n      lyric: [],\n      tlyric: [],\n      simiLoading: false,\n      simiPlaylists: [],\n      simiSongs: [],\n      nolyric: false\n    }\n  },\n  methods: {\n    async updateSong() {\n      this.updateLyric()\n      this.updateSimi()\n    },\n    async updateLyric() {\n      const result = await getLyric(this.currentSong.id)\n      this.nolyric = !isDef(result.lrc) || !result.lrc.lyric\n      if (!this.nolyric) {\n        const { lyric, tlyric } = lyricParser(result)\n        this.lyric = lyric\n        this.tlyric = tlyric\n      }\n    },\n    async updateSimi() {\n      this.simiLoading = true\n      const [simiPlaylists, simiSongs] = await Promise.all([\n        getSimiPlaylists(this.currentSong.id),\n        getSimiSongs(this.currentSong.id)\n      ]).finally(() => {\n        this.simiLoading = false\n      })\n      this.simiPlaylists = simiPlaylists.playlists\n      this.simiSongs = simiSongs.songs.map(song => {\n        const {\n          id,\n          name,\n          artists,\n          mvid,\n          album: { picUrl },\n          duration\n        } = song\n        return createSong({\n          id,\n          name,\n          artists,\n          duration,\n          img: picUrl,\n          mvId: mvid\n        })\n      })\n    },\n    getPlayerShowCls() {\n      return this.isPlayerShow ? \"show\" : \"hide\"\n    },\n    getActiveCls(index) {\n      return this.activeLyricIndex === index ? \"active\" : \"\"\n    },\n    getDiscRotateCls() {\n      return this.playing ? \"rotate\" : \"pause\"\n    },\n    onInitScroller(scoller) {\n      const onScrollStart = type => {\n        this.clearTimer(type)\n        this.lyricScrolling[type] = true\n      }\n      const onScrollEnd = type => {\n        // 滚动结束后两秒 歌词开始自动滚动\n        this.clearTimer(type)\n        this.lyricTimer[type] = setTimeout(() => {\n          this.lyricScrolling[type] = false\n        }, AUTO_SCROLL_RECOVER_TIME)\n      }\n      scoller.on(\"scrollStart\", onScrollStart.bind(null, SCROLL_TYPE))\n      scoller.on(\"mousewheelStart\", onScrollStart.bind(null, WHEEL_TYPE))\n\n      scoller.on(\"scrollEnd\", onScrollEnd.bind(null, SCROLL_TYPE))\n      scoller.on(\"mousewheelEnd\", onScrollEnd.bind(null, WHEEL_TYPE))\n    },\n    scrollToActiveLyric() {\n      if (this.activeLyricIndex !== -1) {\n        const { scroller, lyric } = this.$refs\n        if (lyric && lyric[this.activeLyricIndex]) {\n          scroller\n            .getScroller()\n            .scrollToElement(lyric[this.activeLyricIndex], 200, 0, true)\n        }\n      }\n    },\n    clearTimer(type) {\n      this.lyricTimer[type] && clearTimeout(this.lyricTimer[type])\n    },\n    onClickPlaylist(id) {\n      // 点击的歌单和当前打开的个单页是同一个 直接关闭player\n      if (id === Number(this.$route.params.id)) {\n        this.setPlayerShow(false)\n      } else {\n        this.$router.push(`/playlist/${id}`)\n      }\n    },\n    onClickSong(song) {\n      this.startSong(song)\n      this.addToPlaylist(song)\n    },\n    onGoMv() {\n      this.setPlayerShow(false)\n      goMvWithCheck(this.currentSong.mvId)\n    },\n    resizeScroller: debounce(function() {\n      this.$refs.scroller.getScroller().refresh()\n    }, 500),\n    addResizeListener() {\n      window.addEventListener(\"resize\", this.resizeScroller)\n    },\n    removeResizeListener() {\n      window.removeEventListener(\"resize\", this.resizeScroller)\n    },\n    ...mapMutations([\"setPlayerShow\"]),\n    ...mapActions([\"startSong\", \"addToPlaylist\"])\n  },\n  computed: {\n    activeLyricIndex() {\n      return this.lyricWithTranslation\n        ? this.lyricWithTranslation.findIndex((l, index) => {\n            const nextLyric = this.lyricWithTranslation[index + 1]\n            return (\n              this.currentTime >= l.time &&\n              (nextLyric ? this.currentTime < nextLyric.time : true)\n            )\n          })\n        : -1\n    },\n    lyricWithTranslation() {\n      let ret = []\n      // 空内容的去除\n      const lyricFiltered = this.lyric.filter(({ content }) => Boolean(content))\n      // content统一转换数组形式\n      if (lyricFiltered.length) {\n        lyricFiltered.forEach(l => {\n          const { time, content } = l\n          const lyricItem = { time, content, contents: [content] }\n          const sameTimeTLyric = this.tlyric.find(\n            ({ time: tLyricTime }) => tLyricTime === time\n          )\n          if (sameTimeTLyric) {\n            const { content: tLyricContent } = sameTimeTLyric\n            if (content) {\n              lyricItem.contents.push(tLyricContent)\n            }\n          }\n          ret.push(lyricItem)\n        })\n      } else {\n        ret = lyricFiltered.map(({ time, content }) => ({\n          time,\n          content,\n          contents: [content]\n        }))\n      }\n      return ret\n    },\n    ...mapState([\"currentSong\", \"currentTime\", \"playing\", \"isPlayerShow\"]),\n    ...mapGetters([\"hasCurrentSong\"])\n  },\n  watch: {\n    isPlayerShow(show) {\n      if (show) {\n        // 歌词短期内不会变化 所以只拉取相似信息\n        this.updateSimi()\n        this.addResizeListener()\n        this.$nextTick(() => {\n          this.scrollToActiveLyric()\n        })\n      } else {\n        this.removeResizeListener()\n      }\n    },\n    currentSong(newSong, oldSong) {\n      if (!newSong.id) {\n        this.setPlayerShow(false)\n        return\n      }\n      if (newSong.id === oldSong.id) {\n        return\n      }\n      // 如果歌曲详情显示状态切歌 需要拉取歌曲相关信息\n      if (this.isPlayerShow) {\n        this.updateSong()\n      } else {\n        // 否则只是更新歌词\n        this.updateLyric()\n      }\n    },\n    activeLyricIndex(newIndex, oldIndex) {\n      if (\n        newIndex !== oldIndex &&\n        !this.lyricScrolling[WHEEL_TYPE] &&\n        !this.lyricScrolling[SCROLL_TYPE]\n      ) {\n        this.scrollToActiveLyric()\n      }\n    },\n    $route() {\n      this.setPlayerShow(false)\n    }\n  },\n  components: {\n    Comments\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@keyframes rotate {\n  0% {\n    transform: rotate(0);\n  }\n\n  100% {\n    transform: rotate(1turn);\n  }\n}\n\n$img-left-padding: 36px;\n$img-outer-border-d: 320px;\n$img-outer-d: 300px;\n\n.player {\n  position: fixed;\n  top: $header-height;\n  bottom: $mini-player-height;\n  left: 0;\n  right: 0;\n  padding: 0 36px;\n  background: var(--player-bgcolor);\n  z-index: $song-detail-z-index;\n  overflow: hidden;\n  overflow-y: auto;\n  transition: transform 0.5s;\n\n  &.hide {\n    transform: translateY(105%);\n  }\n\n  &.show {\n    transform: none;\n  }\n\n  .content {\n    max-width: 870px;\n    margin: auto;\n\n    .song {\n      display: flex;\n\n      .left {\n        position: relative;\n        padding: 80px 70px 0 $img-left-padding;\n        display: flex;\n        justify-content: center;\n\n        $support-d: 30px;\n        $support-d-half: $support-d / 2;\n        .play-bar-support {\n          position: absolute;\n          left: $img-left-padding + $img-outer-border-d / 2 - $support-d / 2;\n          top: -$support-d-half;\n          width: $support-d;\n          height: $support-d;\n          z-index: 2;\n        }\n\n        .play-bar {\n          $w: 100px;\n          $h: 146px;\n          position: absolute;\n          top: 0;\n          left: $img-left-padding + $img-outer-border-d / 2 - 6px;\n          width: $w;\n          height: $h;\n          z-index: 1;\n          transform-origin: 0 0;\n          transform: rotate(-30deg);\n          transition: all 0.3s;\n\n          &.playing {\n            transform: rotate(5deg);\n          }\n        }\n\n        .img-outer-border {\n          @include round($img-outer-border-d);\n          @include flex-center;\n          background: var(--song-shallow-grey-bg);\n\n          .img-outer {\n            @include round($img-outer-d);\n            @include flex-center;\n            background: $black;\n            background: linear-gradient(-45deg, #333540, #070708, #333540);\n            animation: rotate 20s linear infinite;\n\n            &.paused {\n              animation-play-state: paused;\n            }\n\n            .img-wrap {\n              @include img-wrap(200px);\n\n              img {\n                border-radius: 50%;\n              }\n            }\n          }\n        }\n      }\n\n      .right {\n        flex: 1;\n        padding-top: 45px;\n        .name-wrap {\n          display: flex;\n          align-items: center;\n          margin-bottom: 16px;\n\n          .name {\n            font-size: $font-size-title-lg;\n            color: var(--font-color-white);\n          }\n\n          .mv-tag {\n            display: inline-block;\n            margin-left: 8px;\n            padding: 2px;\n            border: 1px solid currentColor;\n            border-radius: 2px;\n            color: $theme-color;\n            cursor: pointer;\n          }\n        }\n\n        .artists {\n          margin-bottom: 16px;\n        }\n\n        .desc {\n          display: flex;\n          font-size: $font-size-sm;\n          margin-bottom: 30px;\n\n          .desc-item {\n            display: flex;\n            margin-right: 32px;\n            .label {\n              display: inline-block;\n              margin-right: 4px;\n            }\n\n            .value {\n              color: $blue;\n            }\n          }\n        }\n\n        .lyric-wrap {\n          width: 380px;\n          height: 350px;\n          mask-image: linear-gradient(\n            180deg,\n            hsla(0, 0%, 100%, 0) 0,\n            hsla(0, 0%, 100%, 0.6) 15%,\n            #fff 25%,\n            #fff 75%,\n            hsla(0, 0%, 100%, 0.6) 85%,\n            hsla(0, 0%, 100%, 0)\n          );\n\n          .lyric-item {\n            margin-bottom: 16px;\n            font-size: $font-size-sm;\n\n            &.active {\n              font-size: $font-size;\n              color: var(--font-color-white);\n              font-weight: $font-weight-bold;\n            }\n\n            .lyric-text {\n              margin-bottom: 8px;\n            }\n          }\n        }\n      }\n    }\n\n    .bottom {\n      display: flex;\n      margin-top: 48px;\n      margin-bottom: 36px;\n\n      .left {\n        flex: 1;\n      }\n\n      .right {\n        padding-left: 36px;\n        width: 28%;\n        overflow: hidden;\n\n        .simi-playlists {\n          margin-bottom: 36px;\n        }\n\n        .simi-songs {\n          .play-icon {\n            @include abs-center;\n          }\n        }\n\n        .simi-item {\n          margin-bottom: 6px;\n        }\n\n        .title {\n          font-size: $font-size-lg;\n          font-weight: $font-weight-bold;\n          margin-bottom: 12px;\n        }\n\n        .desc {\n          display: flex;\n          align-items: center;\n\n          .count {\n            margin-left: 4px;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}