{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/components/mini-player.vue?vue&type=template&id=6159c3b7&scoped=true&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/components/mini-player.vue","mtime":1592641032488},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"mini-player\", attrs: { id: \"mini-player\" } },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"song\" },\n        [\n          _vm.hasCurrentSong\n            ? [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"img-wrap\",\n                    on: { click: _vm.togglePlayerShow }\n                  },\n                  [\n                    _c(\"div\", { staticClass: \"mask\" }),\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"lazy\",\n                          rawName: \"v-lazy\",\n                          value: _vm.$utils.genImgUrl(_vm.currentSong.img, 80),\n                          expression: \"$utils.genImgUrl(currentSong.img, 80)\"\n                        }\n                      ],\n                      staticClass: \"blur\"\n                    }),\n                    _c(\n                      \"div\",\n                      { staticClass: \"player-control\" },\n                      [\n                        _c(\"Icon\", {\n                          attrs: {\n                            size: 24,\n                            type: _vm.playControlIcon,\n                            color: \"white\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ]\n                ),\n                _c(\"div\", { staticClass: \"content\" }, [\n                  _c(\"div\", { staticClass: \"top\" }, [\n                    _c(\"p\", { staticClass: \"name\" }, [\n                      _vm._v(_vm._s(_vm.currentSong.name))\n                    ]),\n                    _c(\"p\", { staticClass: \"split\" }, [_vm._v(\"-\")]),\n                    _c(\"p\", { staticClass: \"artists\" }, [\n                      _vm._v(_vm._s(_vm.currentSong.artistsText))\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"time\" }, [\n                    _c(\"span\", { staticClass: \"played-time\" }, [\n                      _vm._v(_vm._s(_vm.$utils.formatTime(_vm.currentTime)))\n                    ]),\n                    _c(\"span\", { staticClass: \"split\" }, [_vm._v(\"/\")]),\n                    _c(\"span\", { staticClass: \"total-time\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.$utils.formatTime(_vm.currentSong.duration / 1000)\n                        )\n                      )\n                    ])\n                  ])\n                ])\n              ]\n            : _vm._e()\n        ],\n        2\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"control\" },\n        [\n          _c(\"Icon\", {\n            staticClass: \"icon\",\n            attrs: { size: 24, type: \"prev\" },\n            on: { click: _vm.prev }\n          }),\n          _c(\n            \"el-popover\",\n            {\n              attrs: {\n                value: _vm.isPlayErrorPromptShow,\n                placement: \"top\",\n                trigger: \"manual\",\n                width: \"160\"\n              }\n            },\n            [\n              _c(\"p\", [_vm._v(\"请点击开始播放。\")]),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"play-icon\",\n                  attrs: { slot: \"reference\" },\n                  on: { click: _vm.togglePlaying },\n                  slot: \"reference\"\n                },\n                [_c(\"Icon\", { attrs: { size: 24, type: _vm.playIcon } })],\n                1\n              )\n            ]\n          ),\n          _c(\"Icon\", {\n            staticClass: \"icon\",\n            attrs: { size: 24, type: \"next\" },\n            on: { click: _vm.next }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"mode\" },\n        [\n          _c(\"Share\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.hasCurrentSong,\n                expression: \"hasCurrentSong\"\n              }\n            ],\n            staticClass: \"mode-item\",\n            attrs: { shareUrl: _vm.shareUrl }\n          }),\n          _c(\n            \"el-popover\",\n            { attrs: { placement: \"top\", trigger: \"hover\", width: \"160\" } },\n            [\n              _c(\"p\", [_vm._v(_vm._s(_vm.playModeText))]),\n              _c(\"Icon\", {\n                staticClass: \"mode-item\",\n                attrs: { slot: \"reference\", size: 20, type: _vm.modeIcon },\n                on: { click: _vm.onChangePlayMode },\n                slot: \"reference\"\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-popover\",\n            {\n              attrs: {\n                value: _vm.isPlaylistPromptShow,\n                placement: \"top\",\n                trigger: \"manual\",\n                width: \"160\"\n              }\n            },\n            [\n              _c(\"p\", [_vm._v(\"已更新歌单\")]),\n              _c(\"Icon\", {\n                staticClass: \"mode-item\",\n                attrs: { slot: \"reference\", size: 20, type: \"playlist\" },\n                on: { click: _vm.togglePlaylistShow },\n                slot: \"reference\"\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"volume-item\" },\n            [\n              _c(\"Volume\", {\n                attrs: { volume: _vm.volume },\n                on: { volumeChange: _vm.onVolumeChange }\n              })\n            ],\n            1\n          ),\n          _c(\"Icon\", {\n            staticClass: \"mode-item\",\n            attrs: { size: 20, type: \"github\" },\n            on: { click: _vm.goGitHub }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"progress-bar-wrap\" },\n        [\n          _c(\"ProgressBar\", {\n            attrs: {\n              disabled: !_vm.hasCurrentSong,\n              percent: _vm.playedPercent\n            },\n            on: { percentChange: _vm.onProgressChange }\n          })\n        ],\n        1\n      ),\n      _c(\"audio\", {\n        ref: \"audio\",\n        attrs: { src: _vm.currentSong.url },\n        on: { canplay: _vm.ready, ended: _vm.end, timeupdate: _vm.updateTime }\n      })\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}