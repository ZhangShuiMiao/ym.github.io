{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/components/playlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/components/playlist.vue","mtime":1592641032489},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations, mapActions } from \"@/store/helper/music\"\nimport SongTable from \"./song-table\"\nexport default {\n  mounted() {\n    // 点击需要保留播放器的dom\n    this.reserveDoms = [document.getElementById(\"mini-player\")]\n  },\n  data() {\n    this.tabs = [\"播放列表\", \"历史记录\"]\n    this.LIST_TAB = 0\n    this.HISTORY_TAB = 1\n\n    return {\n      activeTab: this.LIST_TAB,\n      reserveDoms: null\n    }\n  },\n  methods: {\n    clear() {\n      if (this.isPlaylist) {\n        this.clearPlaylist()\n      } else {\n        this.clearHistory()\n      }\n    },\n    ...mapMutations([\"setPlaylistShow\", \"setPlaylist\"]),\n    ...mapActions([\"clearCurrentSong\", \"clearPlaylist\", \"clearHistory\"])\n  },\n  computed: {\n    dataSource() {\n      return this.isPlaylist ? this.playlist : this.playHistory\n    },\n    isPlaylist() {\n      return this.activeTab === this.LIST_TAB\n    },\n    ...mapState([\"isPlaylistShow\", \"playlist\", \"playHistory\"])\n  },\n  components: {\n    SongTable\n  }\n}\n",{"version":3,"sources":["playlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"playlist.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <Toggle\n    :reserveDoms=\"reserveDoms\"\n    :show=\"isPlaylistShow\"\n    @update:show=\"setPlaylistShow(false)\"\n  >\n    <div\n      class=\"playlist\"\n      ref=\"playlist\"\n      v-show=\"isPlaylistShow\"\n    >\n      <Tabs\n        :tabs=\"tabs\"\n        align=\"center\"\n        v-model=\"activeTab\"\n      />\n      <div class=\"header\">\n        <p class=\"total\">总共{{dataSource.length}}首</p>\n        <div\n          @click=\"clear\"\n          class=\"remove\"\n          v-if=\"dataSource.length\"\n        >\n          <Icon type=\"remove\" />\n          <span class=\"text\">清空</span>\n        </div>\n      </div>\n      <template>\n        <div\n          class=\"song-table-wrap\"\n          v-if=\"dataSource.length\"\n        >\n          <SongTable\n            :hideColumns=\"['index', 'img', 'albumName']\"\n            :songs=\"dataSource\"\n          />\n        </div>\n        <div\n          class=\"empty\"\n          v-else\n        >你还没有添加任何歌曲</div>\n      </template>\n    </div>\n  </Toggle>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { mapState, mapMutations, mapActions } from \"@/store/helper/music\"\nimport SongTable from \"./song-table\"\nexport default {\n  mounted() {\n    // 点击需要保留播放器的dom\n    this.reserveDoms = [document.getElementById(\"mini-player\")]\n  },\n  data() {\n    this.tabs = [\"播放列表\", \"历史记录\"]\n    this.LIST_TAB = 0\n    this.HISTORY_TAB = 1\n\n    return {\n      activeTab: this.LIST_TAB,\n      reserveDoms: null\n    }\n  },\n  methods: {\n    clear() {\n      if (this.isPlaylist) {\n        this.clearPlaylist()\n      } else {\n        this.clearHistory()\n      }\n    },\n    ...mapMutations([\"setPlaylistShow\", \"setPlaylist\"]),\n    ...mapActions([\"clearCurrentSong\", \"clearPlaylist\", \"clearHistory\"])\n  },\n  computed: {\n    dataSource() {\n      return this.isPlaylist ? this.playlist : this.playHistory\n    },\n    isPlaylist() {\n      return this.activeTab === this.LIST_TAB\n    },\n    ...mapState([\"isPlaylistShow\", \"playlist\", \"playHistory\"])\n  },\n  components: {\n    SongTable\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"~@/style/element-overwrite.scss\";\n\n.playlist {\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 400px;\n  bottom: $mini-player-height;\n  display: flex;\n  flex-direction: column;\n  background: var(--playlist-bgcolor);\n  z-index: $playlist-z-index;\n  @include box-shadow;\n  @include el-table-theme(var(--playlist-bgcolor));\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 40px;\n    margin: 0 20px;\n    border-bottom: 1px solid var(--border);\n\n    .total {\n      font-size: $font-size-sm;\n    }\n\n    .remove {\n      @include flex-center;\n      cursor: pointer;\n      font-size: $font-size-sm;\n\n      .text {\n        display: inline-block;\n        margin-left: 4px;\n      }\n    }\n  }\n\n  .song-table-wrap {\n    flex: 1;\n    overflow-y: auto;\n  }\n\n  .empty {\n    @include flex-center();\n    flex: 1;\n  }\n}\n</style>\n"]}]}