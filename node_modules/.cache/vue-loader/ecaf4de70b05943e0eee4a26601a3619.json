{"remainingRequest":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/muise/src/page/playlists/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/muise/src/page/playlists/index.vue","mtime":1592641032493},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/muise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPlaylists, getTopPlaylists } from \"@/api\"\nimport PlaylistCard from \"@/components/playlist-card\"\nimport TopPlaylistCard from \"@/components/top-playlist-card\"\nimport { getPageOffset, scrollInto } from \"@/utils\"\n\nconst PAGE_SIZE = 50\nexport default {\n  async created() {\n    this.PAGE_SIZE = PAGE_SIZE\n    this.tabs = [\n      \"全部\",\n      \"欧美\",\n      \"华语\",\n      \"流行\",\n      \"说唱\",\n      \"摇滚\",\n      \"民谣\",\n      \"电子\",\n      \"轻音乐\",\n      \"影视原声\",\n      \"ACG\",\n      \"怀旧\",\n      \"治愈\",\n      \"旅行\"\n    ]\n    this.initData()\n  },\n  data() {\n    return {\n      activeTabIndex: 0,\n      playlists: [],\n      currentPage: 0,\n      total: 0,\n      topPlaylist: {}\n    }\n  },\n  methods: {\n    // 获取歌单和精品歌单\n    async initData() {\n      this.getPlaylists()\n      this.getTopPlaylists()\n    },\n    async getPlaylists() {\n      const { playlists, total } = await getPlaylists({\n        limit: PAGE_SIZE,\n        offset: getPageOffset(this.currentPage, PAGE_SIZE),\n        cat: this.tabs[this.activeTabIndex]\n      })\n      this.playlists = playlists\n      this.total = total\n    },\n    async getTopPlaylists() {\n      const { playlists } = await getTopPlaylists({\n        limit: 1,\n        cat: this.tabs[this.activeTabIndex]\n      })\n      this.topPlaylist = playlists[0] || {}\n    },\n    // 分页只重新获取歌单\n    async onPageChange(page) {\n      this.currentPage = page\n      this.getPlaylists()\n      scrollInto(this.$refs.playlists)\n    },\n    onTabChange() {\n      this.initData()\n    }\n  },\n  components: {\n    TopPlaylistCard,\n    PlaylistCard\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/playlists","sourcesContent":["// 推荐歌单页面\n<template>\n  <div\n    class=\"playlists\"\n    ref=\"playlists\"\n  >\n    <div\n      class=\"top-play-list-card\"\n      v-if=\"topPlaylist.id\"\n    >\n      <TopPlaylistCard\n        :desc=\"topPlaylist.description\"\n        :id=\"topPlaylist.id\"\n        :img=\"topPlaylist.coverImgUrl\"\n        :name=\"topPlaylist.name\"\n      />\n    </div>\n    <div class=\"tabs\">\n      <Tabs\n        :tabs=\"tabs\"\n        @tabChange=\"onTabChange\"\n        align=\"right\"\n        type=\"small\"\n        v-model=\"activeTabIndex\"\n      />\n    </div>\n    <div class=\"playlist-cards\">\n      <PlaylistCard\n        :desc=\"`播放量：${$utils.formatNumber(item.playCount)}`\"\n        :id=\"item.id\"\n        :img=\"item.coverImgUrl\"\n        :key=\"item.id\"\n        :name=\"item.name\"\n        v-for=\"item in playlists\"\n      />\n    </div>\n    <Pagination\n      :current-page.sync=\"currentPage\"\n      :page-size=\"PAGE_SIZE\"\n      :total=\"total\"\n      @current-change=\"onPageChange\"\n      class=\"pagination\"\n    ></Pagination>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { getPlaylists, getTopPlaylists } from \"@/api\"\nimport PlaylistCard from \"@/components/playlist-card\"\nimport TopPlaylistCard from \"@/components/top-playlist-card\"\nimport { getPageOffset, scrollInto } from \"@/utils\"\n\nconst PAGE_SIZE = 50\nexport default {\n  async created() {\n    this.PAGE_SIZE = PAGE_SIZE\n    this.tabs = [\n      \"全部\",\n      \"欧美\",\n      \"华语\",\n      \"流行\",\n      \"说唱\",\n      \"摇滚\",\n      \"民谣\",\n      \"电子\",\n      \"轻音乐\",\n      \"影视原声\",\n      \"ACG\",\n      \"怀旧\",\n      \"治愈\",\n      \"旅行\"\n    ]\n    this.initData()\n  },\n  data() {\n    return {\n      activeTabIndex: 0,\n      playlists: [],\n      currentPage: 0,\n      total: 0,\n      topPlaylist: {}\n    }\n  },\n  methods: {\n    // 获取歌单和精品歌单\n    async initData() {\n      this.getPlaylists()\n      this.getTopPlaylists()\n    },\n    async getPlaylists() {\n      const { playlists, total } = await getPlaylists({\n        limit: PAGE_SIZE,\n        offset: getPageOffset(this.currentPage, PAGE_SIZE),\n        cat: this.tabs[this.activeTabIndex]\n      })\n      this.playlists = playlists\n      this.total = total\n    },\n    async getTopPlaylists() {\n      const { playlists } = await getTopPlaylists({\n        limit: 1,\n        cat: this.tabs[this.activeTabIndex]\n      })\n      this.topPlaylist = playlists[0] || {}\n    },\n    // 分页只重新获取歌单\n    async onPageChange(page) {\n      this.currentPage = page\n      this.getPlaylists()\n      scrollInto(this.$refs.playlists)\n    },\n    onTabChange() {\n      this.initData()\n    }\n  },\n  components: {\n    TopPlaylistCard,\n    PlaylistCard\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.playlists {\n  padding: 12px;\n\n  .top-play-list-card {\n    margin-bottom: 16px;\n  }\n\n  .playlist-cards {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 36px;\n  }\n}\n</style>\n"]}]}