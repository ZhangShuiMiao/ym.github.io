{"remainingRequest":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangsir/Desktop/ymyu/src/base/confirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangsir/Desktop/ymyu/src/base/confirm.vue","mtime":1592641032486},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangsir/Desktop/ymyu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\"\nconst Confirm = {\n  name: \"Confirm\",\n  props: [\"visible\", \"text\", \"title\", \"onConfirm\"],\n  methods: {\n    confirmAndClose() {\n      this.onConfirm && this.onConfirm()\n      this.visible = false\n    }\n  }\n}\n\nexport default Confirm\n\n// 单例减少开销\nlet instanceCache\n// 命令式调用\nexport const confirm = function(text, title, onConfirm = () => {}) {\n  if (typeof title === \"function\") {\n    onConfirm = title\n    title = undefined\n  }\n\n  const ConfirmCtor = Vue.extend(Confirm)\n  const getInstance = () => {\n    if (!instanceCache) {\n      instanceCache = new ConfirmCtor({\n        propsData: {\n          text,\n          title,\n          onConfirm\n        }\n      })\n      // 生成dom\n      instanceCache.$mount()\n      document.body.appendChild(instanceCache.$el)\n    } else {\n      // 更新属性\n      instanceCache.text = text\n      instanceCache.title = title\n      instanceCache.onConfirm = onConfirm\n    }\n    return instanceCache\n  }\n  const instance = getInstance()\n  // 确保更新的prop渲染到dom\n  // 确保动画效果\n  Vue.nextTick(() => {\n    instance.visible = true\n  })\n}\n",{"version":3,"sources":["confirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"confirm.vue","sourceRoot":"src/base","sourcesContent":["<template>\n  <el-dialog\n    :modal=\"false\"\n    :visible.sync=\"visible\"\n    :width=\"$utils.toRem(320)\"\n    class=\"confirm-dialog\"\n  >\n    <div slot=\"title\">{{title || '提示'}}</div>\n    <div class=\"confirm-body\">{{text}}</div>\n    <span\n      class=\"dialog-footer\"\n      slot=\"footer\"\n    >\n      <el-button\n        @click=\"confirmAndClose\"\n        class=\"confirm-btn\"\n        type=\"primary\"\n      >确认</el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport Vue from \"vue\"\nconst Confirm = {\n  name: \"Confirm\",\n  props: [\"visible\", \"text\", \"title\", \"onConfirm\"],\n  methods: {\n    confirmAndClose() {\n      this.onConfirm && this.onConfirm()\n      this.visible = false\n    }\n  }\n}\n\nexport default Confirm\n\n// 单例减少开销\nlet instanceCache\n// 命令式调用\nexport const confirm = function(text, title, onConfirm = () => {}) {\n  if (typeof title === \"function\") {\n    onConfirm = title\n    title = undefined\n  }\n\n  const ConfirmCtor = Vue.extend(Confirm)\n  const getInstance = () => {\n    if (!instanceCache) {\n      instanceCache = new ConfirmCtor({\n        propsData: {\n          text,\n          title,\n          onConfirm\n        }\n      })\n      // 生成dom\n      instanceCache.$mount()\n      document.body.appendChild(instanceCache.$el)\n    } else {\n      // 更新属性\n      instanceCache.text = text\n      instanceCache.title = title\n      instanceCache.onConfirm = onConfirm\n    }\n    return instanceCache\n  }\n  const instance = getInstance()\n  // 确保更新的prop渲染到dom\n  // 确保动画效果\n  Vue.nextTick(() => {\n    instance.visible = true\n  })\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.confirm-dialog {\n  /deep/.el-dialog__body {\n    padding-top: 20px;\n    padding-bottom: 20px;\n  }\n  .confirm-body {\n    line-height: 20px;\n  }\n  .confirm-btn {\n    width: 100%;\n  }\n}\n</style>\n"]}]}